<project name="metawidget" default="example-faces-penguincolony">

	<!-- Properties -->
		
	<property file="build.properties"/>
	<property name="metawidget.name" value="${ant.project.name}-${metawidget.version}"/>
    <property name="icefaces.root.dir" location="../../../../icefaces/trunk/icefaces" />
    <property name="icefaces.lib.dir" location="${icefaces.root.dir}/lib" />
    <property name="penguin.lib.dir" location="examples/src/web/faces/penguincolony/lib" />
	<property name="run.dir" value="${build.dir}/run"/>	
	
	<!-- Clean -->

	<target name="clean">		
		<delete dir="${build.dir}"/>
	</target>
	
	<!-- Init -->

	<target name="init">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.dir}/run"/>
	</target>

	<target name="compile-examples" depends="init">

		<mkdir dir="${build.dir}/example-classes"/>

		<javac sourcepath="" srcdir="examples/src/java" destdir="${build.dir}/example-classes" debug="${build.debug}" optimize="on" target="1.5">
			<classpath>
	            <fileset dir="${icefaces.lib.dir}" includes="*.jar"/>
				<fileset dir="${penguin.lib.dir}" includes="*.jar"/>
				<pathelement path="${build.dir}/classes"/>
			</classpath>
		</javac>

	</target>

	<target name="test-faces-penguincolony" depends="example-faces-penguincolony">
		
		<!-- Test on Tomcat -->

		<copy file="${build.dir}/examples/faces/penguincolony-faces.war" todir="${tomcat.dir}/webapps" overwrite="true"/>
		<delete dir="${tomcat.dir}/webapps/penguincolony-faces"/>
		<antcall target="test-web-start-tomcat"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="test/src/web/examples/faces">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file penguincolony-test.xml"/>
		</java>
		
		<antcall target="test-web-stop-tomcat"/>
		
		<!-- Test on GlassFish -->

		<delete>
			<fileset dir="${glassfish.dir}/domains/${glassfish.domain}/autodeploy">
				<include name="penguincolony-*"/>
			</fileset>
		</delete>
		<copy file="${build.dir}/examples/faces/penguincolony-faces.war" todir="${glassfish.dir}/domains/${glassfish.domain}/autodeploy" overwrite="true"/>
		<antcall target="test-web-start-glassfish"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="test/src/web/examples/faces">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file penguincolony-test.xml"/>
		</java>

		<antcall target="test-web-stop-glassfish"/>

		<!-- Test on Jetty (doesn't work?)

		<copy file="${build.dir}/examples/faces/penguincolony-faces.war" todir="${jetty.dir}/webapps" overwrite="true"/>
		<antcall target="test-web-start-jetty"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="test/src/web/examples/faces">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file penguincolony-test.xml"/>
		</java>

		<antcall target="test-web-stop-jetty"/> -->

	</target>

	<!-- Tomcat Test -->
		
	<target name="test-web-start-tomcat">

		<available property="tomcat-exists" file="${tomcat.dir}/bin/bootstrap.jar"/>
		<fail message="Apache Tomcat not installed at 'tomcat.dir' (as indicated in build.properties)" unless="tomcat-exists"/>

		<echo message="Starting ${tomcat.dir} (then waiting 10 seconds)..."/>
		
		<java jar="${tomcat.dir}/bin/bootstrap.jar" fork="true" spawn="true" dir="${run.dir}">
			<jvmarg value="-Dcatalina.home=${tomcat.dir}"/>
			<jvmarg value="-Duser.timezone=GMT"/>
			<jvmarg value="-Duser.region=US"/>
		</java>
		
		<sleep seconds="10"/>
		
	</target>
	
	<target name="test-web-stop-tomcat">
		
		<echo message="Stopping ${tomcat.dir} (then waiting 30 seconds)..."/>

		<java jar="${tomcat.dir}/bin/bootstrap.jar" fork="true" dir="${run.dir}">
	        <jvmarg value="-Dcatalina.home=${tomcat.dir}"/>
	        <arg line="stop"/>
	    </java>
		
		<sleep seconds="30"/>

	</target>

	<!-- JBoss Test -->

	<target name="test-web-start-jboss">

		<available property="jboss-exists" file="${jboss.dir}/bin/run.bat"/>
		<fail message="JBoss not installed at 'jboss.dir' (as indicated in build.properties)" unless="jboss-exists"/>
		
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${jboss.dir}/server/default/tmp">
				<include name="**/*"/>
			</fileset>
			<fileset dir="${jboss.dir}/server/default/work">
				<include name="**/*"/>
			</fileset>			
		</delete>
		
		<echo message="Starting ${jboss.dir} (then waiting 60 seconds)..."/>

		<!-- Unlike for Tomcat, don't also set time zone -->
		<!-- here: seems to badly mess up Seam/Facelets  -->
		
        <exec executable="${jboss.dir}/bin/run.bat" dir="${run.dir}" spawn="true">
	    	<env key="JAVA_OPTS" value="-Duser.language=en -Duser.country=UK -Xms128M -Xmx512M -XX:MaxPermSize=256M"/>
		</exec>
		
		<sleep seconds="60"/>
		
	</target>
	
	<target name="test-web-stop-jboss">
		
		<echo message="Stopping ${jboss.dir} (then waiting 30 seconds)..."/>
        <exec executable="${jboss.dir}/bin/shutdown.bat" dir="${run.dir}">
        	<arg value="-S"/>
		</exec>
		<sleep seconds="30"/>

	</target>

	<!-- GlassFish Tests -->
	
	<!-- (if GlassFish fails intermittently, try setting com.sun.enterprise.server.ss.setReuseAddress -->
	<!--  to true as discussed here http://forums.java.net/jive/message.jspa?messageID=172574)        -->

	<target name="test-web-start-glassfish">

		<available property="glassfish-exists" file="${glassfish.dir}/bin/asadmin.bat"/>
		<fail message="GlassFish not installed at 'glassfish.dir' (as indicated in build.properties)" unless="glassfish-exists"/>
		
		<echo message="Starting ${glassfish.dir} (then waiting 50 seconds)..."/>

        <exec executable="${glassfish.dir}/bin/asadmin.bat" dir="${run.dir}" spawn="true">
        	<arg value="start-domain"/>
        	<arg value="${glassfish.domain}"/>
		</exec>
		
		<sleep seconds="50"/>
		
	</target>
	
	<target name="test-web-stop-glassfish">
		
		<echo message="Stopping ${glassfish.dir} (then waiting 30 seconds)..."/>
        <exec executable="${glassfish.dir}/bin/asadmin.bat" dir="${run.dir}">
        	<arg value="stop-domain"/>
        	<arg value="${glassfish.domain}"/>
		</exec>
		<sleep seconds="30"/>

	</target>

	<!-- Jetty Tests -->

	<!-- (if Jetty fails intermittently, try the latest version) -->

	<target name="test-web-start-jetty">

		<available property="jetty-exists" file="${jetty.dir}/start.jar"/>
		<fail message="Jetty not installed at 'jetty.dir' (as indicated in build.properties)" unless="jetty-exists"/>
		
		<echo message="Starting ${jetty.dir} (then waiting 30 seconds)..."/>

		<java jar="${jetty.dir}/start.jar" fork="true" spawn="true" dir="${run.dir}">
			<jvmarg value="-Djetty.home=${jetty.dir}"/>
			<jvmarg value="-Duser.timezone=GMT"/>
			<jvmarg value="-Duser.region=US"/>
			<jvmarg value="-DSTOP.PORT=8079"/>
			<jvmarg value="-DSTOP.KEY=secret"/>
		</java>

		<sleep seconds="30"/>
		
	</target>
	
	<target name="test-web-stop-jetty">
		
		<echo message="Stopping ${jetty.dir} (then waiting 30 seconds)..."/>
		<java jar="${jetty.dir}/start.jar" fork="true" dir="${run.dir}">
			<jvmarg value="-Djetty.home=${jetty.dir}"/>
			<jvmarg value="-DSTOP.PORT=8079"/>
			<jvmarg value="-DSTOP.KEY=secret"/>
			<arg value="--stop"/>
		</java>
		<sleep seconds="30"/>

	</target>

	<!-- Examples -->

	<target name="example-faces-penguincolony" depends="compile-examples">

		<mkdir dir="${build.dir}/examples/faces"/>

		<copy todir="${build.dir}/example-classes">
			<fileset dir="examples/src/java">
				<include name="org/metawidget/example/faces/penguincolony/**/*.properties"/>
			</fileset>
		</copy>

		<war warfile="${build.dir}/examples/faces/penguincolony-faces.war" webxml="examples/src/web/faces/penguincolony/WEB-INF/web.xml">
			<fileset dir="examples/src/web/faces/penguincolony">
				<exclude name="**/classes/**"/>
				<exclude name="**/lib/**"/>
				<exclude name="**/.*"/>
				<exclude name="WEB-INF/web.xml"/>
			</fileset>
			<classes dir="${build.dir}/example-classes">
				<include name="org/metawidget/example/faces/penguincolony/**"/>
			</classes>
			<lib dir="${penguin.lib.dir}">
				<include name="jstl*.jar"/>
				<include name="metawidget.jar"/>
			</lib>
			<lib dir="${icefaces.lib.dir}">
				<include name="backport-util-concurrent.jar"/>
				<include name="commons-beanutils.jar"/>
				<include name="commons-collections.jar"/>
				<include name="commons-digester.jar"/>
				<include name="commons-discovery.jar"/>
				<include name="commons-el.jar"/>
				<include name="commons-fileupload.jar"/>
				<include name="commons-logging*.jar"/>
				<include name="FastInfoset.jar"/>
				<include name="icefaces*.jar"/>
				<include name="jsf-api-1.2.jar"/>
				<include name="jsf-impl-1.2.jar"/>
			</lib>
		</war>

	</target>

</project>
