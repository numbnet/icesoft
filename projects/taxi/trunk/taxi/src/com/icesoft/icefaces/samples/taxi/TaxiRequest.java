package com.icesoft.icefaces.samples.taxi;

import com.icesoft.icefaces.samples.taxi.util.StringResource;

/**
 * Taxi Request represents once instance of a taxi request sent in by
 * a taxi client.  The taxi driver can look at this record and schedule
 * a pick up.
 */
public class TaxiRequest {

    /**
     * Request has been sent to server and status pending
     */
    public static final int STATUS_PENDING = 0;
    /**
     * Request has been picked up a taxi.
     */
    public static final int STATUS_DISPATCHED = 1;

    /**
     * Request has been canceled by end user.
     */
    public static final int STATUS_CANCELED = 2;

    /**
     * Request has been completed by Taxi Driver.
     */
    public static final int STATUS_COMPLETE = 3;

    /**
     * Fields typed in by a taxi client
     */

    private String Name = "";
    private String Address = "";
    private String intersection = "";
    private String city = "";
    private String comments = "";

    /**
     * Fields updated by taxi driver
     */
    private int status;
    private int eta;
    private User taxiClient;
    private User taxiDriver;

    // distance randomly generated by broker.
    private int distance;

    /**
     * Object locks for concurrency.
     */
    private final Object clientRequestLock = new Object();

    private boolean selected;


    public TaxiRequest() {
    }

    public TaxiRequest(String name, String address, String intersection,
                       String city, String comments, int status, int eta) {
        Name = name;
        Address = address;
        this.intersection = intersection;
        this.city = city;
        this.comments = comments;
        this.status = status;
        this.eta = eta;
    }

    public String getName() {
        return Name;
    }

    public void setName(String name) {
        Name = StringResource.fixCapitalization(name);
    }

    public String getAddress() {
        return Address;
    }

    public void setAddress(String address) {
        Address = StringResource.fixCapitalization(address);
    }

    public String getIntersection() {
        return intersection;
    }

    public void setIntersection(String intersection) {
        this.intersection = StringResource.fixCapitalization(intersection);
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = StringResource.fixCapitalization(city);
    }

    public String getComments() {
        return comments;
    }

    public void setComments(String comments) {
        this.comments = comments;
    }

    public int getStatus() {
        return status;
    }

    public void setStatus(int status) {
        this.status = status;
    }

    public int getEta() {
        return eta;
    }

    public void setEta(int eta) {
        this.eta = eta;
    }

    public User getTaxiClient() {
        return taxiClient;
    }

    public void setTaxiClient(User taxiClient) {
        this.taxiClient = taxiClient;
    }

    public User getTaxiDriver() {
        return taxiDriver;
    }

    public void setTaxiDriver(User taxiDriver) {
        this.taxiDriver = taxiDriver;
    }


    public int getDistance() {
        return distance;
    }

    public void setDistance(int distance) {
        this.distance = distance;
    }

    public boolean isSelected() {
        return selected;
    }

    public void setSelected(boolean selected) {
        this.selected = selected;
    }


    public String getStatusLabel() {
        if (status == STATUS_CANCELED) {
            return "Cancelled";
        } else if (status == STATUS_COMPLETE) {
            return "Arrived";
        } else if (status == STATUS_DISPATCHED) {
            return "Dispatched";
        } else if (status == STATUS_PENDING) {
            return "Pending";
        }
        return "N/A";
    }
}
