<?xml version="1.0"?>

<project name="seam-comp-showcase" default="deploy" basedir=".">

	<!-- Give user a chance to override without editing this file or typing -D -->
	<property file="${basedir}/build.properties" />

	<!-- set global properties for this build -->
	<property name="project.name" value="seam-comp-showcase"/>
	<property name="dist.dir" value="dist" />
	<property name="src.java.dir" value="src" />
	<property name="src.test.dir" value="test" />
	<property name="lib.dir" value="lib" />
	<property name="ear.dir" value="exploded-archives/${project.name}.ear" />
	<property name="jar.dir" value="exploded-archives/${project.name}.jar" />
	<property name="war.dir" value="exploded-archives/${project.name}.war" />
	<property name="test.dir" value="test-build" />
	<property name="embedded-ejb3.dir" value="${basedir}/embedded-ejb/conf" />
	<property name="deploy.dir" value="${jboss.home}/server/default/deploy" />
	<property name="ear.deploy.dir" value="${deploy.dir}/${project.name}.ear" />
	<property name="jar.deploy.dir" value="${ear.deploy.dir}/${project.name}.jar" />
	<property name="war.deploy.dir" value="${ear.deploy.dir}/${project.name}.war" />
	<property name="testng.jar" value="${basedir}/lib/testng-4.5.1-jdk15.jar" />
	<property name="javac.debug" value="true" />
	<property name="javac.deprecation" value="false" />
	<property name="profile" value="dev" />

	<fileset id="lib" dir="${lib.dir}">
		<include name="*.jar" />
	</fileset>

	<path id="build.classpath">
		<fileset refid="lib" />
	</path>

		<!-- check to see if the source for icefaces is available to get component docs-->
	<target name="resource-check" description="check for component docs directory">
		<available file="${icefacesSourceDirectory}/component/doc" type="dir" property="source.present"/> 
               <echo message="source directory is installed ${source.present}"/>
               <condition property="component.docs.dir" value="${icefacesSourceDirectory}/component/doc" 
                        else="${icefacesSourceDirectory}/docs/components">
                        <istrue value="${source.present}"/>
               </condition>
               <echo message=" component docs dir is ${component.docs.dir}"/>
 	</target>	
	
	<target name="init" description="Initialize the build" depends="resource-check">
		<mkdir dir="${jar.dir}" />
		<mkdir dir="${ear.dir}" />
		<mkdir dir="${war.dir}" />
		<mkdir dir="${dist.dir}" />
                <echo message=" component docs dir is ${component.docs.dir}"/>
	</target>

	<target name="compile" depends="init" 
			description="Compile the Java source code"
		    unless="eclipse.running">
		<javac classpathref="build.classpath" 
			        destdir="${jar.dir}" 
			          debug="${javac.debug}" 
			    deprecation="${javac.deprecation}" 
			        nowarn="on">
			<src path="${src.java.dir}" />
		</javac>
	</target>

	<target name="copyclasses" depends="init" 
			description="Copy the classes that were compiled by eclipse"
		    if="eclipse.running">
		<copy todir="${jar.dir}">
			<fileset dir="${test.dir}">
				<include name="**/*.class"/>
			</fileset>
		</copy>
	</target>

	<target name="jar" depends="compile,copyclasses" 
			description="Build the distribution .jar file">
		<copy todir="${jar.dir}">
			<fileset dir="${basedir}/resources">
				<include name="seam.properties" />
			</fileset>
		</copy>
		
		<copy todir="${jar.dir}">
		   <fileset dir="${basedir}/src" />
		</copy>
		<copy todir="${jar.dir}/META-INF">
			<fileset dir="${basedir}/resources/META-INF">
				<include name="ejb-jar.xml" />
			</fileset>
		</copy>
		<copy tofile="${jar.dir}/META-INF/persistence.xml" 
			    file="${basedir}/resources/META-INF/persistence-${profile}.xml"
		   overwrite="true"/>
<!--	no database stuff to copy	<copy tofile="${jar.dir}/import.sql" 
			    file="${basedir}/resources/import-${profile}.sql"
		   overwrite="true"/> -->
		   
		   
	</target>
        <target name="war-base" depends="compile">
            	<copy todir="${war.dir}">
			<fileset dir="${basedir}/view" />
		</copy>
                <copy todir="${war.dir}/WEB-INF">
                    <fileset dir="${basedir}/resources/WEB-INF">
			<include name="*.*"/>
			<include name="classes/**/*.*"/>
			<exclude name="classes/**/*.class"/>
                        <exclude name="web*.xml"/>
                        <exclude name="page*.xml"/>
                        <exclude name="component*.xml"/>
                        <exclude name="faces-config*.xml"/>
                        <include name="persistence*.xml"/>
                        <include name="jboss-*.xml"/>
                    </fileset>
                    <filterset>
			<filter token="jndiPattern" value="${project.name}/#{ejbName}/local" />
			<filter token="embeddedEjb" value="false" />
                    </filterset>
		</copy>		
		<copy todir="${war.dir}/WEB-INF">
                    <fileset dir="${basedir}/resources/WEB-INF">
			<include name="lib/*.*"/>
			<include name="classes/**/*.class"/>
                    </fileset>
		</copy>		
		<copy todir="${war.dir}/WEB-INF/lib">
                    <fileset dir="${lib.dir}">
                        <include name="jboss-seam-*.jar" />
			<exclude name="jboss-seam-gen.jar" />
                    </fileset>
		</copy>
		<copy todir="${war.dir}/WEB-INF/classes/com/icesoft/icefaces/samples/showcase/resources">
			<fileset dir="${basedir}/resources"> 
				<include name="messages*.properties"/>
			</fileset>
		</copy>
		
        	<copy todir="${war.dir}/docs" preservelastmodified="true">
            		<fileset dir="${component.docs.dir}"/>
        	</copy>	
        	
        	<copy todir="${war.dir}/WEB-INF/resources">
			<fileset dir="${basedir}/resources"> 
				<include name="*.zip"/>
			</fileset>
        	</copy>	
        	
        </target>
        <target name="war2.0-configs" description="copies proper configs for web-inf for seam1.2.1">
               <copy todir="${war.dir}/WEB-INF" overwrite="true">
                    <fileset dir="${basedir}/resources/WEB-INF/seam2Configs">
			<include name="*.xml"/>
                    </fileset>
                    <filterset>
			<filter token="jndiPattern" value="${project.name}/#{ejbName}/local" />
			<filter token="embeddedEjb" value="false" />
                    </filterset>
		</copy>		
        </target>
        <target name="war1.2-configs" description="copies proper configs for web-inf for seam1.2.1">
              <copy todir="${war.dir}/WEB-INF" overwrite="true">
                    <fileset dir="${basedir}/resources/WEB-INF/Seam1.2.1.GA">
			<include name="*.xml"/>
                    </fileset>
                    <filterset>
			<filter token="jndiPattern" value="${project.name}/#{ejbName}/local" />
			<filter token="embeddedEjb" value="false" />
                    </filterset>
		</copy>	
        </target>
        
	<target name="war" depends="freshen, war-base, war1.2-configs" 
			description="Build the distribution .war file">
             <copy file="${basedir}/resources/WEB-INF/web-myfaces.xml" tofile="${war.dir}/WEB-INF/web.xml" overwrite="true"/>
	</target>

        <target name="war-glassFish" depends="freshen-glassFish, war-base, war2.0-configs" description="Builds the war file for jsf1.2">
             <copy file="${basedir}/resources/WEB-INF/web-Glassfish.xml" tofile="${war.dir}/WEB-INF/web.xml"  overwrite="true"/>            
        </target>
        
        <target name="war-glassFish1.2" depends="freshen-glassFish1.2, war-base, war1.2-configs" description="Builds the war file for jsf1.2 and Seam1.2.1.GA or Seam2">
             <copy file="${basedir}/resources/WEB-INF/web-Glassfish-seam1.2.xml" tofile="${war.dir}/WEB-INF/web.xml" overwrite="true"/>
        </target>  
        
	<target name="ear" depends="ear-base" description="Build the EAR for myfaces jars and Seam1.2.1.GA">           
		<copy todir="${ear.dir}">
			<fileset dir="${lib.dir}">
				<include name="el-*.jar" />
				<include name="drools-*.jar"/>
				<include name="janino-*.jar"/>
				<include name="antlr-*.jar"/>
				<include name="commons-jci-*.jar"/>
				<include name="stringtemplate-*.jar"/>
			</fileset>
		</copy>

               <copy file="${basedir}/resources/META-INF/application-myfaces.xml" tofile="${ear.dir}/META-INF/application.xml" 
                            preservelastmodified="true" overwrite="true"/>
	</target>
	
        <target name="archive" description="Package the archives">
                <jar jarfile="${dist.dir}/${project.name}.jar" basedir="${jar.dir}"/>
		<jar jarfile="${dist.dir}/${project.name}.war" basedir="${war.dir}"/>
		<jar jarfile="${dist.dir}/${project.name}.ear">
			<fileset dir="${ear.dir}"/>
			<fileset dir="${dist.dir}">
				<include name="${project.name}.jar"/>
				<include name="${project.name}.war"/>
			</fileset>
		</jar>
        </target>
            
	<target name="build-myFaces" depends="freshen,jar,war,ear,archive" 
			description="Package the archives">
               <echo message="run deploy target to deploy (seam 1.2.1 myfaces app) ear file to server"/>
	</target>
	<target name="build-Seam2.0WithJsf1.2" depends="freshen-glassFish,jar,war-glassFish,ear-glassFish, archive" 
			description="Package the archives for seam2.0 using jsf1.2 specs">
                <echo message="run deploy target to deploy (Seam 2.0 and jsf1.2 app) ear file to server"/>
	</target>	
        <target name="build-Seam1.2WithJsf1.2" depends="freshen-glassFish1.2,jar,war-glassFish1.2,ear-glassFish1.2, archive" 
			description="Package the archives for seam1.2.1 and jsf 1.2 specs">
                <echo message="run deploy target to deploy (Seam 1.2.1 and jsf1.2 app) ear file to server"/>
	</target>	
	<target name="datasource">
		<fail unless="jboss.home">jboss.home not set</fail>
		<copy todir="${deploy.dir}">
			<fileset dir="${basedir}/resources">
				<include name="${project.name}-${profile}-ds.xml" />
			</fileset>
		</copy>
	</target>
	
	<target name="explode" depends="jar,war,ear,datasource" 
			description="Deploy the exploded archive">
		<fail unless="jboss.home">jboss.home not set</fail>
		
		<mkdir dir="${jar.deploy.dir}"/>
		<mkdir dir="${war.deploy.dir}"/>		
		
		<copy todir="${jar.deploy.dir}">
			<fileset dir="${jar.dir}"/>
		</copy>
		<copy todir="${war.deploy.dir}">
			<fileset dir="${war.dir}"/>
		</copy>
		<copy todir="${ear.deploy.dir}">
			<fileset dir="${ear.dir}"/>
		</copy>
	</target>

	<target name="unexplode" description="Undeploy the exploded archive">
		<delete failonerror="no">
			<fileset dir="${ear.deploy.dir}">
				<exclude name="**/*.jar"/>
			</fileset>
		</delete>
		<delete file="${deploy.dir}/${project.name}-${profile}-ds.xml" failonerror="no"/>
		<delete dir="${ear.deploy.dir}" failonerror="no"/>
	</target>
	
	<target name="restart" depends="explode" description="Restart the exploded archive">
		<touch file="${ear.deploy.dir}/META-INF/application.xml"/>
	</target>

	<target name="deploy" depends="archive,datasource" description="Deploy to JBoss AS">
		<fail unless="jboss.home">jboss.home not set</fail>
		<copy todir="${deploy.dir}" file="${dist.dir}/${project.name}.ear" />
	</target>

	<target name="undeploy" description="Undeploy the example from JBoss">
		<delete file="${deploy.dir}/${project.name}.ear" />
		<delete file="${deploy.dir}/${project.name}-dev-ds.xml" />
		<delete file="${deploy.dir}/${project.name}-prod-ds.xml" />
	</target>

	<target name="clean" description="Cleans up the build directory">
		<delete dir="${dist.dir}"/>
		<delete dir="${ear.dir}"/>
		<delete dir="${war.dir}"/>
		<delete dir="${jar.dir}"/>
		<delete dir="${basedir}/test-report"/>
		<delete dir="${basedir}/test-output"/>
		<delete failonerror="no">
			<fileset dir="${test.dir}">
				<exclude name="**/*.class" if="eclipse.running"/>
			</fileset>
		</delete>
	</target>

	<target name="compiletest" unless="eclipse.running" description="Compile the Java source code for the tests">
          <mkdir dir="${test.dir}"/>
         <javac classpathref="build.classpath"
                        destdir="${test.dir}"
                          debug="${javac.debug}"
                    deprecation="${javac.deprecation}"
                        nowarn="on">
                <src path="${src.java.dir}" />
                <src path="${src.test.dir}" />
         </javac>
	</target>
	
	<target name="buildtest" depends="compiletest" description="Build the tests">
		<copy todir="${test.dir}">
			<fileset dir="${basedir}/resources">
				<exclude name="META-INF/persistence*.xml"/>
				<exclude name="import*.sql"/>
				<exclude name="${project.name}-*-ds.xml"/>
			</fileset>
		</copy>
		<copy tofile="${test.dir}/META-INF/persistence.xml" 
			    file="${basedir}/resources/META-INF/persistence-test.xml"
		   overwrite="true"/>
		<copy tofile="${test.dir}/import.sql" 
			    file="${basedir}/resources/import-test.sql"
		   overwrite="true"/>
		<copy todir="${test.dir}" flatten="true">
			<fileset dir="${src.test.dir}">
				<include name="**/*Test.xml" />
			</fileset>
		</copy>
	</target>

	<target name="test" depends="buildtest" description="Run the tests">		
		<taskdef resource="testngtasks" classpath="${testng.jar}" />
		<testng outputdir="${basedir}/test-report">
			<classpath path="${test.dir}" />
			<classpath path="${embedded-ejb3.dir}" />
			<classpath refid="build.classpath" />
			<xmlfileset dir="${test.dir}" includes="*Test.xml" />
		</testng>
	</target>

        <target name="freshen-base" depends="delete-libs" description="copying of common libraries">
            <copy todir="${lib.dir}">
                <fileset dir="${icefacesSourceDirectory}/lib">
                    <include name="icefaces*.jar" />
                    <include name="backport-util-concurrent.jar" />
                    <include name="commons-fileupload.jar"/> 
                    <include name="commons-logging*.jar"/>
                    <include name="krysalis-jCharts-1.0.0-alpha-1.jar"/>
                    <include name="servlet-api.jar"/>
                </fileset>
                <fileset dir="${jboss.seam.home}">
                    <include name="jboss-seam*.jar"/>
                </fileset>
            </copy>
        </target>
        
	<target name="freshen" depends="freshen-base"
                description="grab fresh icefaces and Seam jars for myfaces deployment">
            <copy todir="${lib.dir}">
                <fileset dir="${icefacesSourceDirectory}/lib">
                    <include name="myfaces*.jar"/>
                </fileset>
                <fileset dir="${jboss.seam.home}/lib">
                    <include name="jboss-ejb3-all.jar"/>
                    <include name="antlr-2.7.6.jar"/>
                    <include name="el-api.jar"/>
                    <include name="el-ri.jar"/>
                    <include name="jbpm-*.jar"/>
                </fileset>
                <fileset dir="${jboss.seam.home}/drools/lib">
                    <include name="antlr*.jar"/>
                    <include name="drools*.jar"/>
                    <include name="janino*.jar"/>
                    <include name="stringtemplate-2.3b6.jar"/>
                    <include name="commons-jci-*.jar"/>
                </fileset>
            </copy>
	</target>
        
 	<target name="freshen-glassFish1.2" depends="freshen-base"
            description="grab fresh icefaces jars for jsf1.2* and seam1.2.1">
            <copy todir="${lib.dir}">
                <fileset dir="${icefacesSourceDirectory}/lib">
                    <include name="jsf*.jar"/>
                    <include name="commons-digester*.jar"/>
                </fileset>
                <fileset dir="${jboss.seam.home}/lib">
                    <include name="jboss-ejb3-all.jar"/>
                    <include name="antlr-2.7.6.jar"/>
                    <include name="el-api.jar"/>
                    <include name="el-ri.jar"/>
                    <include name="jbpm-*.jar"/>
                </fileset>
                <fileset dir="${jboss.seam.home}/drools/lib">
                    <include name="antlr-3.0ea8.jar"/>
                    <include name="drools*.jar"/>
                    <include name="janino*.jar"/>
                    <include name="stringtemplate-2.3b6.jar"/>
                    <include name="commons-jci-*.jar"/>
                </fileset>
            </copy>
	</target>
	<target name="freshen-glassFish" depends="freshen-base"
                    description="grab fresh icefaces jars for jsf1.2*">
            <copy todir="${lib.dir}">
              <fileset dir="${icefacesSourceDirectory}/lib">
                <include name="jsf*.jar"/>
                <include name="commons-digester*.jar"/>
  	    </fileset>
            <fileset dir="${jboss.seam.home}/lib">
                <include name="jboss*.jar"/>
                 <include name="jbpm*.jar" />
                 <include name="jboss-el.jar" />
                 <include name="antlr-*.jar"/>
                <include name="antlr.jar"/>
                   <include name="mvel*.jar"/>
                   <include name="drools-*.jar"/>
                   <include name="janino-*.jar"/>
            	<include name="ejb-api.jar"/>
            </fileset>
      <!--      <fileset dir="${jboss.seam.home}/drools/lib">
                <include name="antlr.jar"/>
                <include name="mvel*.jar"/>
                <include name="drools-*.jar"/>
                <include name="janino-*.jar"/>
            </fileset> -->
	</copy>
	</target>
        
        <target name="ear-base">
            <copy todir="${ear.dir}">
		<fileset dir="${basedir}/resources">
                	<include name="*jpdl.xml" />
			<include name="hibernate.cfg.xml" />
			<include name="jbpm.cfg.xml" />
			<include name="security.drl" />
		</fileset>
                <fileset dir="${lib.dir}">
                    <include name="jboss-seam.jar" />
                    <include name="jbpm*.jar" />
                </fileset>
		<fileset dir="${lib.dir}">
			<include name="icefaces*.jar" />
			<include name="backport-util-concurrent.jar" />
                        <include name="krysalis-jCharts-1.0.0-alpha-1.jar" />
			<include name="commons-fileupload.jar"/> 
                        <include name="commons-digester*.jar"/>
		</fileset>
            </copy>
            <copy todir="${ear.dir}/META-INF">
		<fileset dir="${basedir}/resources/META-INF">
			<include name="jboss-app.xml" />
		</fileset>
            </copy>
        </target>
        
	<target name="ear-glassFish" depends="freshen-glassFish" description="Build the EAR for jsf1.2 and Seam1.3.0"> 
        <copy todir="${ear.dir}">
			<fileset dir="${basedir}">
                 <include name="lib/jboss-el.jar" />
                 <include name="lib/drools*.jar"/>
                 <include name="lib/mvel*.jar"/>
                 <include name="lib/janino*.jar"/>
                 <include name="lib/antlr*.jar"/>
				 <include name="lib/jbpm-jpdl.jar"/>
				 <include name="lib/icefaces*.jar"/>
				 <include name="lib/backport-util-concurrent.jar" />
				<include name="lib/krysalis-jCharts-1.0.0-alpha-1.jar" />
				<include name="lib/commons-fileupload.jar"/>
				<include name="lib/commons-digester*.jar"/>
			</fileset>
		</copy>
    	<copy todir="${ear.dir}/META-INF">
    		<fileset dir="${basedir}/resources/META-INF">
    			<include name="jboss-app.xml"/>
    		</fileset>
        </copy>
		<copy todir="${ear.dir}">
			<fileset dir="${lib.dir}">
				<include name="jboss-seam.jar"/>
		    </fileset>
		</copy>
		<copy todir="${ear.dir}">
			<fileset dir="${basedir}/resources">
				<include name="security.drl"/>
		    </fileset>
		</copy>
        <copy file="${basedir}/resources/META-INF/application-Glassfish.xml" tofile="${ear.dir}/META-INF/application.xml" 
                            preservelastmodified="true" overwrite="true"/>
	</target>
        
        <target name="ear-glassFish1.2" depends="ear-base" description="Build the EAR for jsf1.2 and Seam 1.2.1.GA">  
                <copy todir="${ear.dir}">
			<fileset dir="${lib.dir}">
 				<include name="el-*.jar" />
				<include name="drools-*.jar"/>
				<include name="janino-*.jar"/>
				<include name="antlr-*.jar"/>
				<include name="commons-jci-*.jar"/>
				<include name="stringtemplate-*.jar"/>
			</fileset>
		</copy>
             <copy file="${basedir}/resources/META-INF/application-seam1.2Withjsf1.2.xml" tofile="${ear.dir}/META-INF/application.xml" 
                            preservelastmodified="true" overwrite="true"/>
	</target>
        
        <target name="delete-libs">
            	<delete failonerror="no">
			<fileset dir="${lib.dir}">
				<exclude name="jboss-ejb3-all.jar" />
			</fileset>
		</delete>
        </target>
</project>