<?xml version="1.0" ?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
         version="2.4">

<!-- ConfigureListener is not generally required. Due to an apparent bug in 
     Tomcat users have reported seeing the following error "SEVERE: ICEfaces 
     could not initialize JavaServer Faces. Please check that the JSF .jar files 
     are installed correctly.". Specifying the ConfigureListener resolves the 
     issue.  
    <listener> 
        <listener-class>com.sun.faces.config.ConfigureListener</listener-class> 
    </listener>
-->  
    <!-- Seam -->
    
   <listener>
      <listener-class>org.jboss.seam.servlet.SeamListener</listener-class>
   </listener>

    <listener>
        <listener-class>com.icesoft.faces.webapp.http.servlet.SessionDispatcher$Listener</listener-class>
    </listener>
    
    <filter>
        <filter-name>Seam Filter</filter-name>
        <filter-class>org.jboss.seam.web.SeamFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>Seam Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
        
   <servlet>
      <servlet-name>Seam Resource Servlet</servlet-name>
      <servlet-class>org.jboss.seam.servlet.ResourceServlet</servlet-class>
   </servlet>
    
   <servlet-mapping>
      <servlet-name>Seam Resource Servlet</servlet-name>
      <url-pattern>/seam/resource/*</url-pattern>
   </servlet-mapping>
   
   <!-- MyFaces -->   

   <listener>
      <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
   </listener>
   
   <!-- Facelets development mode (disable in production) -->
   
   <context-param>
      <param-name>facelets.DEVELOPMENT</param-name>
      <param-value>true</param-value>
   </context-param>
    
   <!-- JSF -->
    
   <context-param>
      <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
      <param-value>server</param-value>
   </context-param>
    
   <context-param>
      <param-name>javax.faces.DEFAULT_SUFFIX</param-name>
      <param-value>.xhtml</param-value>
   </context-param>

   <context-param>
        <param-name>com.icesoft.faces.standardRequestScope</param-name>
        <param-value>true</param-value>
    </context-param>

    <context-param>
        <param-name>com.icesoft.faces.actionURLSuffix</param-name>
        <param-value>.seam</param-value>
    </context-param>

    <context-param>
        <param-name>com.icesoft.faces.synchronousUpdate</param-name>
        <param-value>false</param-value>
    </context-param>

    <context-param> 
        <param-name>com.icesoft.faces.doJSFStateManagement</param-name>
	<param-value>true</param-value>
    </context-param> 

    <context-param>
        <param-name>org.icesoft.examples.serverClock</param-name>
        <param-value>false</param-value>
    </context-param>
    
<!-- Specifies to the ICEfaces framework whether to support multiple views of a 
     single application from the same browser.  When running in a Portlet 
     environment, this parameter must be set to true. 
    <context-param>
        <param-name>com.icesoft.faces.concurrentDOMViews</param-name>
        <param-value>false</param-value>
    </context-param>
 -->
 
<!-- Specifies the amount of time in milliseconds that the bridge will wait for  
     a response from the server for a user-initiated request before declaring 
     the connection lost.  Un-comment and change the default value, if necessary.    
    <context-param>
        <param-name>com.icesoft.faces.connectionTimeout</param-name>
        <param-value>60000</param-value>
    </context-param>
-->

<!-- Specifies the amount of time in milliseconds that an idle asynchronous 
     blocking connection should be held open before being released. Normally, 
     the blocking connection is closed and re-opened with every communication to 
     the browser, such as user interaction or a heartbeat ping. The purpose of 
     this setting is to remove the possibility of threads being held blocked for 
     a long duration on a dead or completely inactive client connection. This 
     value should be longer than the heartbeat interval to avoid unnecessary
     network traffic.  Un-comment and change the default value, if necessary.    
    <context-param>
        <param-name>com.icesoft.faces.blockingConnectionTimeout</param-name>
        <param-value>90000</param-value>
    </context-param>
-->

<!-- Specifies the amount of time in milliseconds between heartbeat messages.  
     Un-comment and change the default value, if necessary.    
    <context-param>
        <param-name>com.icesoft.faces.heartbeatInterval</param-name>
        <param-value>50000</param-value>
    </context-param>
-->

<!-- Specifies how many consecutive heartbeat connection attempts may fail 
     before the connection is considered lost.  Un-comment and change the 
     default value, if necessary.    
    <context-param>
        <param-name>com.icesoft.faces.heartbeatRetries</param-name>
        <param-value>3</param-value>
    </context-param>
-->

<!-- Specifies the number of milliseconds that a heartbeat request waits for a 
     successful response before it is considered timed out.  Un-comment and 
     change the default value, if necessary.    
    <context-param>
        <param-name>com.icesoft.faces.heartbeatTimeout</param-name>
        <param-value>30000</param-value>
    </context-param>
-->

<!-- Specifies a page URI to redirect the client to when an asynchronous 
     connection is lost. The parameter value must be surrounded by single 
     quotes.  Un-comment and change the default value, if necessary.    
    <context-param>
        <param-name>com.icesoft.faces.connectionLostRedirectURI</param-name>
        <param-value></param-value>
    </context-param>
-->

 <servlet>
    <servlet-name>Main Dispatch Servlet</servlet-name>
    <servlet-class>com.icesoft.faces.webapp.http.servlet.MainServlet</servlet-class>
    <load-on-startup> 1 </load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>Main Dispatch Servlet</servlet-name>
    <url-pattern>/xmlhttp/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>Main Dispatch Servlet</servlet-name>
    <url-pattern>*.iface</url-pattern>
  </servlet-mapping>

  <!-- Blocking Servlet Mapping -->
  <servlet-mapping>
    <servlet-name>Main Dispatch Servlet</servlet-name>
    <url-pattern>/block/*</url-pattern>
  </servlet-mapping>

    <!-- Faces Servlet Mapping -->
    <servlet-mapping>
        <servlet-name>Main Dispatch Servlet</servlet-name>
        <url-pattern>*.seam</url-pattern>
    </servlet-mapping>


                  
   <security-constraint> 
       <display-name>Restrict raw XHTML Documents</display-name>
       <web-resource-collection>
           <web-resource-name>XHTML</web-resource-name>
           <url-pattern>*.xhtml</url-pattern>
       </web-resource-collection>
       <auth-constraint>
           <role-name>NONE</role-name>
       </auth-constraint>
   </security-constraint>
   
</web-app>
