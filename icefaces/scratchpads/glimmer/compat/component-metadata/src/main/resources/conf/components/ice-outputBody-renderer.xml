<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Version: MPL 1.1
  ~
  ~ "The contents of this file are subject to the Mozilla Public License
  ~ Version 1.1 (the "License"); you may not use this file except in
  ~ compliance with the License. You may obtain a copy of the License at
  ~ http://www.mozilla.org/MPL/
  ~
  ~ Software distributed under the License is distributed on an "AS IS"
  ~ basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing rights and limitations under
  ~ the License.
  ~
  ~ The Original Code is ICEfaces 1.5 open source software code, released
  ~ November 5, 2006. The Initial Developer of the Original Code is ICEsoft
  ~ Technologies Canada, Corp. Portions created by ICEsoft are Copyright (C)
  ~ 2004-2010 ICEsoft Technologies Canada, Corp. All Rights Reserved.
  ~
  ~ Contributor(s): _____________________.
  ~
  -->

<renderer>
	<description>
	          <![CDATA[
          <p>Renders the contents of html document.</p>
          <p>The "focus" attribute on the this component allows to focus a 
          component by just setting the "id" or the "clientId". It also avoids the need of component 
        binding. The value of the focus attribute can be bind to the bean 
        using the value binding. So application can dynamically change the focus.
        </p>
        <b>Note:</b>
        <ul>
        <li>- To focus the elements inside the UIData type of components, the element can not be focused using the "id", the clientId has to be used instead.</li>
        <li>- The focus would only be requested when there is a value change on the focus attribute.</li>
        <li>- If you setting the initial focus, the focused component must be rendered on first render call, if not then set the focus attribute only when the component gets rendered.</li>
        </ul>
 
        
          ]]>	
	</description>
	<component-family>com.icesoft.faces.OutputBody</component-family>
	<renderer-type>com.icesoft.faces.OutputBody</renderer-type>

	<renderer-extension>
		<instance-name>outputBody</instance-name>
		<is-container>true</is-container>
		<renders-children>true</renders-children>
		<tag-name>outputBody</tag-name>
		<taglib-prefix>@taglib-prefix@</taglib-prefix>
		<taglib-uri>@taglib-uri@</taglib-uri>
	</renderer-extension>
</renderer>
