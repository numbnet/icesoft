'liferay.com', 'ABOUTUS-NEWS', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'ABOUTUS-NEWS', 'About Us News', 'Custom template for News.', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">\n  <xsl:output method="html" omit-xml-declaration="yes"/>\n  <xsl:template match="/">\n    <link rel="alternate" type="application/rss+xml" title="Liferay RSS Feed" href="http://@portal_url@/cms/servlet/news-rss-feed?mimeType=application/rss+xml"/>\n    <xsl:if test="root/dynamic-element[@name=''main-text'']/dynamic-content != ''''">\n      <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''main-text'']/dynamic-content"/> \n      <br/>\n      <br/>\n    </xsl:if>\n    <xsl:variable name="articles" select="document(''http://@portal_url@/c/journal/get_articles?groupId=@group_id@&amp;templateId=BASIC-RSS-ITEM&amp;delta=5&amp;orderBy=displayDate'')/result-set/result"/>  \n    <xsl:for-each select="$articles"> \n      <b> \n        <a> \n          <xsl:attribute name="href"> \n            <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''link'']/dynamic-content"/> \n          </xsl:attribute>  \n          <xsl:value-of disable-output-escaping="yes" select="reserved-info/title"/> \n        </a> \n      </b>  \n      <br/>  \n      <font color="#777777"> \n        <xsl:text>(</xsl:text>  \n        <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''creator'']/dynamic-content"/>  \n        <xsl:text>)</xsl:text> \n      </font>  \n      <br/>  \n      <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''description'']/dynamic-content"/>  \n      <br/>  \n      <br/> \n    </xsl:for-each> \n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'BASIC-ADS', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'BASIC-ADS', 'Basic Ads', 'Basic Ads', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">  \n  <xsl:output method="html" omit-xml-declaration="yes"/>  \n  <xsl:template match="/"> \n    <table border="0" width="100%">\n      <tr>\n        <td align="center"> \n          <script type="text/javascript">var adUrlsArray = new Array(); var adImagesArray = new Array();\n            <xsl:call-template name="loop-ads"> \n              <xsl:with-param name="iterator" select="number(1)"/>  \n              <xsl:with-param name="total" select="number(5)"/> \n            </xsl:call-template> adIndex = randomMinMax(0, adUrlsArray.length - 1);\n            document.write(''<a href="'' + adUrlsArray[adIndex] + ''" border="0"><img src="'' + adImagesArray[adIndex] + ''"/></a>'');\n          </script> \n        </td>\n      </tr>\n    </table> \n  </xsl:template>  \n  <xsl:template name="loop-ads"> \n    <xsl:param name="iterator"/>  \n    <xsl:param name="total"/>  \n    <xsl:if test="number($total) &gt;= number($iterator)"> \n      <xsl:variable name="image_var"> \n        <xsl:text>image-</xsl:text>  \n        <xsl:value-of disable-output-escaping="yes" select="$iterator"/> \n      </xsl:variable>  \n      <xsl:variable name="image_value"> \n        <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=$image_var]/dynamic-content"/> \n      </xsl:variable>  \n      <xsl:variable name="url_var"> \n        <xsl:text>url-</xsl:text>  \n        <xsl:value-of disable-output-escaping="yes" select="$iterator"/> \n      </xsl:variable>  \n      <xsl:variable name="url_value"> \n        <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=$url_var]/dynamic-content"/> \n      </xsl:variable>  \n      <xsl:if test="$url_value != ''''"> \n        <xsl:text>adUrlsArray[adUrlsArray.length] = ''</xsl:text>  \n        <xsl:value-of disable-output-escaping="yes" select="$url_value"/>  \n        <xsl:text>'';</xsl:text>  \n        <xsl:text>adImagesArray[adImagesArray.length] = ''</xsl:text>  \n        <xsl:value-of disable-output-escaping="yes" select="$image_value"/>  \n        <xsl:text>'';</xsl:text> \n      </xsl:if>  \n      <xsl:call-template name="loop-ads"> \n        <xsl:with-param name="iterator" select="$iterator + 1"/>  \n        <xsl:with-param name="total" select="$total"/> \n      </xsl:call-template> \n    </xsl:if> \n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'BASIC-BANNER', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'BASIC-BANNER', 'Basic Banner', 'Basic banner.', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">  \n  <xsl:output method="html" omit-xml-declaration="yes"/>  \n  <xsl:template match="/"> \n    <div> \n      <xsl:attribute name="style"> \n        <xsl:text>background-image: url(''</xsl:text>  \n        <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''image'']/dynamic-content"/>  \n        <xsl:text>''); background-repeat: no-repeat; width: 520; height: 175;</xsl:text> \n      </xsl:attribute>  \n    </div> \n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'BASIC-IMAGE-TEXT', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'BASIC-IMAGE-TEXT', '2 Rows: Image, Text', '2 rows: image followed by text.', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">  \n  <xsl:output method="html" omit-xml-declaration="yes"/>  \n  <xsl:template match="/"> \n    <table cellpadding="0" cellspacing="0" border="0" width="100%"> \n      <tr> \n        <td align="center"> \n          <img> \n            <xsl:attribute name="src"> \n              <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''image'']/dynamic-content"/> \n            </xsl:attribute> \n          </img> \n        </td> \n      </tr>  \n      <tr> \n        <td> \n          <br/> \n        </td> \n      </tr>  \n      <tr> \n        <xsl:if test="root/dynamic-element[@name=''textarea'']/dynamic-content != ''''"> \n          <td width="100%"> \n            <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''textarea'']/dynamic-content"/> \n          </td> \n        </xsl:if> \n      </tr>  \n      <tr> \n        <td> \n          <br/> \n        </td> \n      </tr> \n    </table> \n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'BASIC-IMAGETEXT', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'BASIC-IMAGE-TEXT', 'Columns: Image, Text', '2 columns: image on the left and text on the right.', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">  \n  <xsl:output method="html" omit-xml-declaration="yes"/>  \n  <xsl:template match="/"> \n    <table cellpadding="0" cellspacing="0" border="0" width="100%"> \n      <tr> \n        <td style="padding-right: 10px;"> \n          <img> \n            <xsl:attribute name="src"> \n              <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''image'']/dynamic-content"/> \n            </xsl:attribute> \n          </img> \n        </td>  \n        <xsl:if test="root/dynamic-element[@name=''textarea'']/dynamic-content != ''''"> \n          <td width="90%"> \n            <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''textarea'']/dynamic-content"/> \n          </td> \n        </xsl:if> \n      </tr>  \n      <tr> \n        <td>\n          <br/>\n        </td> \n      </tr> \n    </table> \n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'BASIC-IMAGETEXT-WRAP', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'BASIC-IMAGE-TEXT', 'Columns: Image, Text (Wrapped)', '2 columns: image on the left and text wrapped on the right.', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">  \n  <xsl:output method="html" omit-xml-declaration="yes"/>  \n  <xsl:template match="/"> \n    <table cellpadding="0" cellspacing="0" border="0" width="100%"> \n      <tr> \n        <td> \n          <div style="float: left; position: relative; padding-right: 10px;"> \n            <img> \n              <xsl:attribute name="src"> \n                <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''image'']/dynamic-content"/> \n              </xsl:attribute> \n            </img> \n          </div>  \n          <xsl:if test="root/dynamic-element[@name=''textarea'']/dynamic-content != ''''"> \n            <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''textarea'']/dynamic-content"/> \n          </xsl:if> \n        </td> \n      </tr>  \n      <tr> \n        <td> \n          <br/> \n        </td> \n      </tr> \n    </table> \n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'BASIC-ITEMS-LIST', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'BASIC-ITEMS-LIST', 'Basic Items List', 'Basic items list.', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">  \n  <xsl:output method="html" omit-xml-declaration="yes"/>  \n  <xsl:template match="/"> \n    <ul> \n      <xsl:call-template name="loop-item"> \n        <xsl:with-param name="iterator" select="number(1)"/>  \n        <xsl:with-param name="total" select="number(10)"/> \n      </xsl:call-template> \n    </ul> \n  </xsl:template>  \n  <xsl:template name="loop-item"> \n    <xsl:param name="iterator"/>  \n    <xsl:param name="total"/>  \n    <xsl:if test="number($total) &gt;= number($iterator)"> \n      <xsl:variable name="item_text_var"> \n        <xsl:text>item-text-</xsl:text>  \n        <xsl:value-of disable-output-escaping="yes" select="$iterator"/> \n      </xsl:variable>  \n      <xsl:variable name="item_text_value"> \n        <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=$item_text_var]/dynamic-content"/> \n      </xsl:variable>  \n      <xsl:variable name="item_url_var"> \n        <xsl:text>item-url-</xsl:text>  \n        <xsl:value-of disable-output-escaping="yes" select="$iterator"/> \n      </xsl:variable>  \n      <xsl:variable name="item_url_value"> \n        <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=$item_url_var]/dynamic-content"/> \n      </xsl:variable>  \n      <xsl:if test="$item_text_value != ''''"> \n        <li style="padding: 3px 0px 3px 0px;"> \n          <font class="content-small"> \n            <a> \n              <xsl:attribute name="href"> \n                <xsl:value-of disable-output-escaping="yes" select="$item_url_value"/> \n              </xsl:attribute>  \n              <xsl:value-of disable-output-escaping="yes" select="$item_text_value"/> \n            </a> \n          </font> \n        </li>  \n      </xsl:if>  \n      <xsl:call-template name="loop-item"> \n        <xsl:with-param name="iterator" select="$iterator + 1"/>  \n        <xsl:with-param name="total" select="$total"/> \n      </xsl:call-template> \n    </xsl:if> \n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'BASIC-LIFECAST', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'BASIC-LIFECAST', 'Basic Lifecast', 'Basic Lifecast', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">  \n  <xsl:output method="html" omit-xml-declaration="yes"/>  \n  <xsl:template match="/"> \n    <table cellpadding="5" cellspacing="3" width="100%"> \n      <tr> \n        <td style="color: rgb(255, 255, 255); background-color: rgb(148, 170, 191);"> \n          <b> \n            <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''title'']/dynamic-content"/> \n          </b>\n        </td>  \n        <td style="color: rgb(0, 31, 64); background-color: rgb(255, 255, 255)" width="50%"> \n          <span class="font-small"> \n            <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''description'']/dynamic-content"/> \n          </span> \n        </td>  \n        <td style="color: rgb(0, 31, 64); background-color: rgb(255, 255, 255);" width="15%"> \n          <span class="font-small"> \n            <a target="_blank"> \n              <xsl:attribute name="href"> \n                <xsl:text>http://@portal_url@/c/portal/flash?title=&amp;height=768&amp;width=1024&amp;movie=</xsl:text>  \n                <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''url'']/dynamic-content"/> \n              </xsl:attribute>  \n              <xsl:text>Full Screen</xsl:text>  \n              <br/>  \n              <xsl:text>(</xsl:text>  \n              <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''size'']/dynamic-content"/>  \n              <xsl:text>)</xsl:text> \n            </a> \n          </span> \n        </td> \n      </tr> \n    </table>  \n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'BASIC-LIFECAST-TITLE', 1, 'liferay.com.1008', 'Alexander Chow', 20050101, 20050101, 'BASIC-LIFECAST-TITLE', 'Basic Lifecast Title', 'Basic Lifecast Title', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">  \n  <xsl:output method="html" omit-xml-declaration="yes"/>  \n  <xsl:template match="/"> \n    <table cellpadding="5" cellspacing="3" width="100%"> \n      <tr> \n        <td style="font-weight: bold; color: rgb(255, 255, 255); background-color: rgb(0, 31, 64);" width="100%"> \n          <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''title'']/dynamic-content"/> \n        </td> \n      </tr> \n    </table> \n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'BASIC-LINKED-IMAGE', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'BASIC-IMAGE-TEXT', 'Basic Linked Image', 'Text is url', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">  \n  <xsl:output method="html" omit-xml-declaration="yes"/>  \n  <xsl:template match="/"> \n    <xsl:variable name="link_value"> \n      <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''textarea'']/dynamic-content"/> \n    </xsl:variable>  \n          <center>\n          <a border="0"> \n            <xsl:attribute name="href"> \n              <xsl:text>http://</xsl:text>\n              <xsl:value-of disable-output-escaping="yes" select="$link_value"/> \n            </xsl:attribute>  \n          <img border="0"> \n            <xsl:attribute name="src"> \n              <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''image'']/dynamic-content"/> \n            </xsl:attribute> \n          </img> \n          </a>\n          </center>\n<br/>\n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'BASIC-RSS-FEED', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'BASIC-RSS-FEED', 'Basic RSS Feed', 'Use to build an RSS 2.0 feed.', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">  \n  <xsl:output method="xml" indent="yes" media-type="text/xml"/>  \n  <xsl:template match="/"> \n    <xsl:variable name="articles" select="document(''http://@portal_url@/c/journal/get_articles?groupId=@group_id@&amp;templateId=BASIC-RSS-ITEM&amp;delta=10&amp;orderBy=displayDate'')/result-set/result"/>  \n    <rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:admin="http://webns.net/mvcb/" version="2.0">  \n      <channel> \n        <title> \n          <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''feed-title'']/dynamic-content"/> \n        </title>  \n        <description> \n          <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''feed-description'']/dynamic-content"/> \n        </description>  \n        <link> \n          <xsl:text>http://@portal_url@</xsl:text> \n        </link>  \n        <xsl:for-each select="$articles"> \n          <item> \n            <title> \n              <xsl:value-of disable-output-escaping="yes" select="reserved-info/title"/> \n            </title>  \n            <pubDate> \n              <xsl:value-of disable-output-escaping="yes" select="reserved-info/display-date"/> \n            </pubDate>  \n            <link> \n              <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''link'']/dynamic-content"/> \n            </link>  \n            <dc:creator> \n              <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''creator'']/dynamic-content"/> \n            </dc:creator>  \n            <description> \n              <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''description'']/dynamic-content"/> \n            </description>  \n            <guid isPermaLink="false"> \n              <xsl:value-of disable-output-escaping="yes" select="@article-id"/> \n              <xsl:text>@</xsl:text>  \n              <xsl:value-of disable-output-escaping="yes" select="reserved-info/modified-date"/> \n            </guid> \n          </item> \n        </xsl:for-each> \n      </channel> \n    </rss> \n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'BASIC-RSS-ITEM', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'BASIC-RSS-ITEM', 'Basic RSS Item', 'Use to build a basic RSS 2.0 item.', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">\n  <xsl:template match="/">\n    <b>\n      <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''title'']/dynamic-content"/>\n    </b>\n    <br/>\n    <br/>\n    <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''description'']/dynamic-content"/>\n    <br/>\n    <a>\n      <xsl:attribute name="href">\n        <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''link'']/dynamic-content"/>\n      </xsl:attribute>\n      <xsl:text>Read more...</xsl:text>\n    </a>\n  </xsl:template>\n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'BASIC-SHOWCASE', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'BASIC-SHOWCASE', 'Basic Showcase', 'Basic showcase with images on right hand side.', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">  \n  <xsl:template match="/">\n    <table border="0" cellpadding="3" cellspacing="0" width="100%" style="margin: 0px 5px 5px 0px"> \n      <tr> \n        <td style="background-color: #001F40; padding-left: 5px;" colspan="2"> \n          <b> \n          <a> \n            <xsl:attribute name="href"> \n              <xsl:text>http://</xsl:text>  \n              <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''company-link'']/dynamic-content"/> \n            </xsl:attribute>  \n            <xsl:attribute name="style">\n              <xsl:text>color: #FFFFFF;</xsl:text>\n            </xsl:attribute>\n            <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''company-link'']/dynamic-content"/> \n          </a> \n          </b> \n        </td> \n      </tr>  \n      <tr> \n        <td style="background-color: #FFFFFF; padding: 20px 20px 20px 20px;" align="center"> \n            <img border="0"> \n              <xsl:attribute name="src"> \n                <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''logo-image'']/dynamic-content"/> \n              </xsl:attribute> \n            </img>  \n        </td>  \n        <td style="background-color: #FFFFFF;color: #001F40; padding: 15px 15px 15px 15px;" width="90%" valign="center"> \n          <xsl:if test="root/dynamic-element[@name=''quote'']/dynamic-content != ''''"> \n            <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''quote'']/dynamic-content"/> \n          </xsl:if> \n        </td> \n      </tr> \n    </table>  \n    <br/>  \n    <br/>  \n    <table border="0" cellpadding="0" cellspacing="0" width="100%"> \n      <tr> \n        <td valign="top"> \n          <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''main-text'']/dynamic-content"/> \n        </td>  \n        <xsl:if test="root/dynamic-element[@name=''screenshot-thumbnail-1'']/dynamic-content != ''''"> \n          <td width="10">&#160;</td>  \n          <td valign="top"> \n            <table border="0" cellpadding="0" cellspacing="0"> \n              <xsl:call-template name="loop-screenshot"> \n                <xsl:with-param name="iterator" select="1"/>  \n                <xsl:with-param name="total" select="10"/> \n              </xsl:call-template> \n            </table> \n          </td> \n        </xsl:if> \n      </tr> \n    </table> \n  </xsl:template>  \n  <xsl:template name="loop-screenshot"> \n    <xsl:param name="iterator"/>  \n    <xsl:param name="total"/>  \n    <xsl:if test="number($total) &gt;= number($iterator)"> \n      <xsl:variable name="screenshot_thumbnail_var"> \n        <xsl:text>screenshot-thumbnail-</xsl:text>  \n        <xsl:value-of disable-output-escaping="yes" select="$iterator"/> \n      </xsl:variable>  \n      <xsl:variable name="screenshot_thumbnail_value"> \n        <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=$screenshot_thumbnail_var]/dynamic-content"/> \n      </xsl:variable>  \n      <xsl:variable name="screenshot_full_var"> \n        <xsl:text>screenshot-full-</xsl:text>  \n        <xsl:value-of disable-output-escaping="yes" select="$iterator"/> \n      </xsl:variable>  \n      <xsl:variable name="screenshot_full_value"> \n        <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=$screenshot_full_var]/dynamic-content"/> \n      </xsl:variable>  \n      <xsl:if test="$screenshot_thumbnail_value != ''''"> \n        <tr> \n          <td> \n            <a> \n              <xsl:attribute name="href"> \n                <xsl:text>http://</xsl:text>  \n                <xsl:value-of disable-output-escaping="yes" select="$screenshot_full_value"/> \n              </xsl:attribute>  \n              <img border="1" hspace="0" vspace="0" width="150" style="padding: 0px 5px 0px 0px"> \n                <xsl:attribute name="src"> \n                  <xsl:text>http://</xsl:text>  \n                  <xsl:value-of disable-output-escaping="yes" select="$screenshot_thumbnail_value"/> \n                </xsl:attribute> \n              </img> \n            </a> \n          </td> \n        </tr>  \n        <tr> \n          <td> \n            <br/> \n          </td> \n        </tr> \n      </xsl:if>  \n      <xsl:call-template name="loop-screenshot"> \n        <xsl:with-param name="iterator" select="$iterator + 1"/>  \n        <xsl:with-param name="total" select="$total"/> \n      </xsl:call-template> \n    </xsl:if> \n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'BASIC-TEXT', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'BASIC-TEXT', 'Basic Text', 'Basic Text', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">  \n  <xsl:output method="html" omit-xml-declaration="yes"/>  \n  <xsl:template match="/"> \n    <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''textarea'']/dynamic-content"/> \n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'BASIC-TEXT-IMAGE', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'BASIC-IMAGE-TEXT', '2 Rows: Text, Image', '2 rows: text followed by image.', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">  \n  <xsl:output method="html" omit-xml-declaration="yes"/>  \n  <xsl:template match="/"> \n    <table cellpadding="0" cellspacing="0" border="0" width="100%"> \n      <tr> \n        <xsl:if test="root/dynamic-element[@name=''textarea'']/dynamic-content != ''''"> \n          <td width="100%"> \n            <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''textarea'']/dynamic-content"/> \n          </td> \n        </xsl:if> \n      </tr>  \n      <tr> \n        <td> \n          <br/> \n        </td> \n      </tr>  \n      <tr> \n        <td align="center"> \n          <img> \n            <xsl:attribute name="src"> \n              <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''image'']/dynamic-content"/> \n            </xsl:attribute> \n          </img> \n        </td> \n      </tr>  \n      <tr> \n        <td> \n          <br/> \n        </td> \n      </tr> \n    </table> \n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'BASIC-TEXTIMAGE-WRAP', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'BASIC-IMAGE-TEXT', 'Columns: Text (Wrapped), Image', '2 columns: text wrapped on the left and image on the right.', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">  \n  <xsl:output method="html" omit-xml-declaration="yes"/>  \n  <xsl:template match="/"> \n    <table cellpadding="0" cellspacing="0" border="0" width="100%"> \n      <tr> \n        <td> \n          <div style="float: right; position: relative; padding-left: 10px;"> \n            <img> \n              <xsl:attribute name="src"> \n                <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''image'']/dynamic-content"/> \n              </xsl:attribute> \n            </img> \n          </div>  \n          <xsl:if test="root/dynamic-element[@name=''textarea'']/dynamic-content != ''''"> \n            <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''textarea'']/dynamic-content"/> \n          </xsl:if> \n        </td> \n      </tr>  \n      <tr> \n        <td> \n          <br/> \n        </td> \n      </tr> \n    </table> \n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'GLOBAL-PROPERTIES', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, '', 'Global Properties', 'Input key value pairs similar to a Java property file. The values are injected into the content at runtime. For example, if you input hello=world, at runtime, the text @hello@ is replaced with the text world.', 'hello=world', 'xsl', 0, ''
'liferay.com', 'SAMPLE-VM-TEMPLATE', 1, 'liferay.com.1008', 'Alexander Chow', 20050101, 20050101, 'SAMPLE-STRUCTURE', 'Sample VM Template', 'Sample velocity template showing the different element types.', '-- VELOCITY TRANSFORM TEMPLATE\n--\n-- All dynamic elements in a structure can be accessed as a Velocity variable.\n-- The given structure:\n--   <root>\n--     <dynamic-element name=''main-text'' type=''text_area''>\n--       <dynamic-element name=''sub-image'' type=''image''></dynamic-element>\n--       <dynamic-element name=''sub-text'' type=''text''></dynamic-element>\n--     </dynamic-element>\n--     <dynamic-element name=''more-text'' type=''text_area''></dynamic-element>\n--     <dynamic-element name=''ms-list'' type=''multi-list''>\n--       <dynamic-element name=''chocolate'' type=''Chocolate''></dynamic-element>\n--       <dynamic-element name=''strawberry'' type=''Strawberry''></dynamic-element>\n--       <dynamic-element name=''vanilla'' type=''Vanilla''></dynamic-element>\n--     </dynamic-element>\n--   </root>\n--\n-- The dynamic element ''main-text'' can be accessed in the following ways:\n--   $main-text.getName()      - The name "main-text"\n--   $main-text.getData()      - The data in the article for main-text\n--   $main-text.getType()      - The type "text-area"\n--   $main-text.getChildren()  - A collection with two nodes (sub-image and \n--                               sub-text) that can be used in the #foreach \n--                               clause\n--\n-- One special accessor exists for elements of type ''multi-list'':\n--   $ms-list.getOptions()     - A collection with up to three string entries\n--                               (chocolate, strawberry, or vanilla) that can be\n--                               used in the #foreach clause\n--\n-- Additionally, the variable $journalTemplatesPath can be used to include\n-- another Journal template, e.g. #parse("$journalTemplatesPath/LAYOUT-PARENT")\n\n<html>\n  <head>\n    <title>$reserved-article-id.getData()</title>\n  </head>\n  <body>\n    <table border="1" cellpadding="8" cellspacing="0" width="600">\n    <tr>\n      <td>Sample Text</td>\n      <td>$sample-text.getData()</td>\n    </tr>\n    <tr>\n      <td>Sample Text Box</td>\n      <td>$sample-text-box.getData()</td>\n    </tr>\n    <tr>\n      <td>Sample Text Area</td>\n      <td>$sample-text-area.getData()</td>\n    </tr>\n    <tr>\n      <td>Image</td>\n      <td><img src="$sample-image.getData()"/></td>\n    </tr>\n    <tr>\n      <td>Sample Boolean Flag</td>\n      <td>$sample-boolean-flag.getData()</td>\n    </tr>\n    <tr>\n      <td>Sample Selection List </td>\n      <td>$sample-selection-list.getData()</td>\n    </tr>\n    <tr>\n      <td>Sample Multiple Selection List</td>\n      <td>\n        <b>\n#foreach($selection in $sample-multi-selection-list.getOptions())\n          $selection\n          <br/>\n#end\n        </b>\n      </td>\n    </tr>\n    <tr>\n      <td>Reserved Article ID</td>\n      <td>$reserved-article-id.getData()</td>\n    </tr>\n    <tr>\n      <td>Reserved Article Version</td>\n      <td>$reserved-article-version.getData()</td>\n    </tr>\n    <tr>\n      <td>Reserved Article Title</td>\n      <td>$reserved-article-title.getData()</td>\n    </tr>\n    <tr>\n      <td>Reserved Article Create Date</td>\n      <td>$reserved-article-create-date.getData()</td>\n    </tr>\n    <tr>\n      <td>Reserved Article Modified Date</td>\n      <td>$reserved-article-modified-date.getData()</td>\n    </tr>\n    <tr>\n      <td>Reserved Article Display Date</td>\n      <td>$reserved-article-display-date.getData()</td>\n    </tr>\n    </table>\n  </body>\n</html>', 'vm', 0, ''
'liferay.com', 'SAMPLE-XSL-TEMPLATE', 1, 'liferay.com.1008', 'Alexander Chow', 20050101, 20050101, 'SAMPLE-STRUCTURE', 'Sample XSL Template', 'Sample XSL template showing the different element types.', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">\n  <xsl:output method="html" omit-xml-declaration="yes"/>\n  <xsl:template match="/">\n    <html>\n      <head>\n        <title>\n          <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''reserved-article-id'']/dynamic-content"/>\n        </title>\n      </head>\n      <body>\n        <table border="1" cellpadding="8" cellspacing="0" width="600">\n          <xsl:call-template name="display-field">\n            <xsl:with-param name="name">\n              <xsl:text>sample-text</xsl:text>\n            </xsl:with-param>\n            <xsl:with-param name="label">\n              <xsl:text>Sample Text</xsl:text>\n            </xsl:with-param>\n          </xsl:call-template>\n          <xsl:call-template name="display-field">\n            <xsl:with-param name="name">\n              <xsl:text>sample-text-box</xsl:text>\n            </xsl:with-param>\n            <xsl:with-param name="label">\n              <xsl:text>Sample Text Box</xsl:text>\n            </xsl:with-param>\n          </xsl:call-template>\n          <xsl:call-template name="display-field">\n            <xsl:with-param name="name">\n              <xsl:text>sample-text-area</xsl:text>\n            </xsl:with-param>\n            <xsl:with-param name="label">\n              <xsl:text>Sample Text Area</xsl:text>\n            </xsl:with-param>\n          </xsl:call-template>\n          <tr>\n            <td>Image</td>\n            <td>\n              <img>\n                <xsl:attribute name="src">\n                  <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''sample-image'']/dynamic-content"/>\n                </xsl:attribute>\n              </img>\n            </td>\n          </tr>\n          <xsl:call-template name="display-field">\n            <xsl:with-param name="name">\n              <xsl:text>sample-boolean-flag</xsl:text>\n            </xsl:with-param>\n            <xsl:with-param name="label">\n              <xsl:text>Sample Boolean Flag</xsl:text>\n            </xsl:with-param>\n          </xsl:call-template>\n          <xsl:call-template name="display-field">\n            <xsl:with-param name="name">\n              <xsl:text>sample-selection-list</xsl:text>\n            </xsl:with-param>\n            <xsl:with-param name="label">\n              <xsl:text>Sample Selection List</xsl:text>\n            </xsl:with-param>\n          </xsl:call-template>\n          <tr>\n            <td>Sample Multiple Selection List</td>\n            <td>\n              <xsl:for-each select="root/dynamic-element[@name=''sample-multi-selection-list'']/dynamic-content/option">\n                <b>\n                  <xsl:value-of disable-output-escaping="yes" select="."/>\n                </b>\n                <br/>\n              </xsl:for-each>\n            </td>\n          </tr>\n          <xsl:call-template name="display-field">\n            <xsl:with-param name="name">\n              <xsl:text>reserved-article-id</xsl:text>\n            </xsl:with-param>\n            <xsl:with-param name="label">\n              <xsl:text>Reserved Article ID</xsl:text>\n            </xsl:with-param>\n          </xsl:call-template>\n          <xsl:call-template name="display-field">\n            <xsl:with-param name="name">\n              <xsl:text>reserved-article-version</xsl:text>\n            </xsl:with-param>\n            <xsl:with-param name="label">\n              <xsl:text>Reserved Article Version</xsl:text>\n            </xsl:with-param>\n          </xsl:call-template>\n          <xsl:call-template name="display-field">\n            <xsl:with-param name="name">\n              <xsl:text>reserved-article-title</xsl:text>\n            </xsl:with-param>\n            <xsl:with-param name="label">\n              <xsl:text>Reserved Article Title</xsl:text>\n            </xsl:with-param>\n          </xsl:call-template>\n          <xsl:call-template name="display-field">\n            <xsl:with-param name="name">\n              <xsl:text>reserved-article-create-date</xsl:text>\n            </xsl:with-param>\n            <xsl:with-param name="label">\n              <xsl:text>Reserved Create Date</xsl:text>\n            </xsl:with-param>\n          </xsl:call-template>\n          <xsl:call-template name="display-field">\n            <xsl:with-param name="name">\n              <xsl:text>reserved-article-modified-date</xsl:text>\n            </xsl:with-param>\n            <xsl:with-param name="label">\n              <xsl:text>Reserved Modified Date</xsl:text>\n            </xsl:with-param>\n          </xsl:call-template>\n          <xsl:call-template name="display-field">\n            <xsl:with-param name="name">\n              <xsl:text>reserved-article-display-date</xsl:text>\n            </xsl:with-param>\n            <xsl:with-param name="label">\n              <xsl:text>Reserved Display Date</xsl:text>\n            </xsl:with-param>\n          </xsl:call-template>\n        </table>\n      </body>\n    </html>\n  </xsl:template>\n  <xsl:template name="display-field">\n    <xsl:param name="name"/>\n    <xsl:param name="label"/>\n    <tr>\n      <td>\n        <xsl:value-of disable-output-escaping="yes" select="$label"/>\n      </td>\n      <td>\n        <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=$name]/dynamic-content"/>\n      </td>\n    </tr>\n  </xsl:template>\n</xsl:stylesheet>', 'xsl', 0, ''
'liferay.com', 'STORIES', 1, 'liferay.com.1', 'Joe Bloggs', 20050101, 20050101, 'STORIES', 'Stories', 'Custom template for stories index.', '<?xml version="1.0"?>\n\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">  \n  <xsl:output method="html" omit-xml-declaration="yes"/>  \n  <xsl:variable name="articles" select="document(''http://@portal_url@/c/journal/get_articles?groupId=@group_id@&amp;templateId=BASIC-SHOWCASE&amp;delta=50'')/result-set/result"/>  \n  <xsl:template match="/"> \n    <script type="text/javascript"> \n      <xsl:text>var quotes = new Array();</xsl:text>  \n      <xsl:for-each select="$articles"> \n        <xsl:if test="root/dynamic-element[@name=''quote'']/dynamic-content != ''''"> \n          <xsl:text>quotes[quotes.length] = "</xsl:text>  \n          <xsl:value-of disable-output-escaping="no" select="root/dynamic-element[@name=''quote'']/dynamic-content"/>  \n          <xsl:text>";</xsl:text> \n        </xsl:if> \n      </xsl:for-each> \n      <![CDATA[\n        if (quotes.length > 0) {\n          var quote = quotes[randomMinMax(0, quotes.length - 1)];\n          if (quote.length > 165) {\n            quote = quote.substring(0, 150) + "...";\n          }\n          document.write("<div style=''background-color: #FFFFFF; color: #001F40; float: right; margin-left: 10px; padding: 10px; width: 250px;''>"); \n          document.write(quote); \n          document.write("</div>");\n        }\n      ]]>\n    </script>  \n    <div> \n      <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=''main-text'']/dynamic-content"/>  \n      <br/>  \n      <br/>  \n      <b>Some Featured Case Studies:</b>  \n      <br/>  \n      <table align="center" border="0" cellpadding="10" cellspacing="0" width="500"> \n        <tr> \n          <xsl:call-template name="loop-features"> \n            <xsl:with-param name="iterator" select="1"/>  \n            <xsl:with-param name="total" select="4"/> \n          </xsl:call-template> \n        </tr> \n      </table> \n    </div> \n  </xsl:template>  \n  <xsl:template name="loop-features"> \n    <xsl:param name="iterator"/>  \n    <xsl:param name="total"/>  \n    <xsl:if test="number($total) &gt;= number($iterator)"> \n      <xsl:variable name="feature_link_var"> \n        <xsl:text>feature-link-</xsl:text>  \n        <xsl:value-of disable-output-escaping="yes" select="$iterator"/> \n      </xsl:variable>  \n      <xsl:variable name="feature_link_value"> \n        <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=$feature_link_var]/dynamic-content"/> \n      </xsl:variable>  \n      <xsl:variable name="feature_logo_var"> \n        <xsl:text>feature-logo-</xsl:text>  \n        <xsl:value-of disable-output-escaping="yes" select="$iterator"/> \n      </xsl:variable>  \n      <xsl:variable name="feature_logo_value"> \n        <xsl:value-of disable-output-escaping="yes" select="root/dynamic-element[@name=$feature_logo_var]/dynamic-content"/> \n      </xsl:variable>  \n      <xsl:if test="$feature_link_value != ''''"> \n        <td> \n          <a border="0"> \n            <xsl:attribute name="href"> \n              <xsl:value-of disable-output-escaping="yes" select="$feature_link_value"/> \n            </xsl:attribute>  \n            <img border="0" width="100" height="80"> \n              <xsl:attribute name="src"> \n                <xsl:text>http://</xsl:text>\n                <xsl:value-of disable-output-escaping="yes" select="$feature_logo_value"/> \n              </xsl:attribute> \n            </img> \n          </a> \n        </td> \n      </xsl:if>  \n      <xsl:call-template name="loop-features"> \n        <xsl:with-param name="iterator" select="$iterator + 1"/>  \n        <xsl:with-param name="total" select="$total"/> \n      </xsl:call-template> \n    </xsl:if> \n  </xsl:template> \n</xsl:stylesheet>', 'xsl', 0, ''
