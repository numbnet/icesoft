Draggable.prototype.dragGhost=false;Draggable.prototype.ORIGINAL_initialize=Draggable.prototype.initialize;Draggable.prototype.initialize=function(C){var B=Ice.StateMon.monitors;for(i=0;i<B.length;i++){A=B[i];if(A.id==C&&A.type=="Draggable"){Ice.DnD.logger.debug("Draggable ["+$(C).id+"] has already been created");return ;}}this.element=$(C);var D=arguments[1];if(D.dragGhost==true){this.dragGhost=true;}if(!D.starteffect){D.starteffect=function(){};}if(!D.endeffect){D.endeffect=function(){};}if(D.handle){D.handle=$(D.handle);D.handle=$(D.handle.id);}this.ORIGINAL_initialize(this.element,D);if(!D.sort){Ice.DnD.logger.debug("Draggable Created ID["+this.element.id+"]");var A=new Ice.DraggableMonitor(this.element,D);A.object=this;Ice.StateMon.add(A);}Ice.DnD.logger.debug("Draggable ["+this.element.id+"] created");};Draggable.prototype.ORIGINAL_startDrag=Draggable.prototype.startDrag;Draggable.prototype.startDrag=function(C){this.dragging=true;if(this.dragGhost==true){Ice.DnD.logger.debug("Init Drag Ghost ID["+this.element.id+"]");Draggables.register(this);try{this._ghost=this.element.cloneNode(true);var B=Ice.util.findForm(this.element);B.appendChild(this._ghost);Position.absolutize(this._ghost);Element.makePositioned(this._ghost);this._original=this.element;Position.clone(this._original,this._ghost);var D=parseInt(this._original.style.zIndex);this._ghost.style.left=Event.pointerX(C)+"px";this._ghost.style.zIndex=++D;this.element=this._ghost;this.eventResize=this.resize.bindAsEventListener(this);Event.observe(window,"resize",this.eventResize);}catch(A){Ice.DnD.logger.error("Error init DragGhost  ID["+this.element.id+"]",A);}}if(this.options.dragCursor){this._cursor=this.element.cloneNode(true);document.body.appendChild(this._cursor);Position.absolutize(this._cursor);var D=1+this.element.style.zIndex;this._cursor.style.zIndex=D;Ice.DnD.logger.debug("clone created");}this.ORIGINAL_startDrag(C);};Draggable.prototype.ORIGINAL_draw=Draggable.prototype.draw;Draggable.prototype.draw=function(A){if(!this.options.dragCursor){return this.ORIGINAL_draw(A);}var E=Position.cumulativeOffset(this.element);var D=this.currentDelta();E[0]-=D[0];E[1]-=D[1];var C=A;if(this.options.snap){if(typeof this.options.snap=="function"){C=this.options.snap(C[0],C[1]);}else{if(this.options.snap instanceof Array){C=C.map(function(F,G){return Math.round(F/this.options.snap[G])*this.options.snap[G];}.bind(this));}else{C=C.map(function(F){return Math.round(F/this.options.snap)*this.options.snap;}.bind(this));}}}var B=this._cursor.style;if((!this.options.constraint)||(this.options.constraint=="horizontal")){B.left=C[0]+"px";}if((!this.options.constraint)||(this.options.constraint=="vertical")){B.top=C[1]+"px";}if(B.visibility=="hidden"){B.visibility="";}};Draggable.prototype.resize=function(A){};Draggable.removeMe=function(D){$(D).undoPositioned();var C=Ice.StateMon.monitors;var F=Array();for(i=0;i<C.length;i++){monitor=C[i];try{if(monitor.id==D&&monitor.type=="Draggable"){if(monitor.object.dragging){return ;}try{var E=$(D+"clientOnly");if(!E){monitor.destroyMe=true;monitor.destroy();}}catch(B){logger.warn("Monitor ["+monitor.id+"] destroyed with exception ["+B+"]");}}else{F.push(monitor);}}catch(A){logger.error("Error destroying monitor ["+monitor.id+"] Msg ["+A+"]");}}Ice.StateMon.monitors=F;};Draggable.prototype.ORIGINAL_updateDrag=Draggable.prototype.updateDrag;Draggable.prototype.updateDrag=function(F,G){Droppables.affectedDrop=null;this.ORIGINAL_updateDrag(F,G);ad=Droppables.affectedDrop;iceEv=new Ice.DndEvent();iceEv.drag=this;if(this.dragGhost==true){var A=parseInt(this.element.offsetHeight);var C=parseInt(Element.getStyle(this.element,"top").split("px")[0]);if(Prototype.Browser.IE){C=this.element.cumulativeOffset().top;}var B=Event.pointerY(F);var E=A+C;var D=(B>C&&B<E);if(!D){this.element.style.top=B+"px";}}if(this.hoveringDrop&&!ad){iceEv.eventType=Ice.DnD.HOVER_END;}if(ad&&(!this.hoveringDrop||this.hoveringDrop.element.id!=ad.element.id)){iceEv.eventType=Ice.DnD.HOVER_START;iceEv.drop=ad;}this.hoveringDrop=(ad!=null)?ad:null;if(!iceEv.eventType){iceEv.eventType=Ice.DnD.DRAG_START;}iceEv.submit();};Draggable.prototype.ORIGINAL_finishDrag=Draggable.prototype.finishDrag;Draggable.prototype.finishDrag=function(D,E){if(!this.options.sort){this.dragging=false;if(E){iceEv=new Ice.DndEvent();iceEv.drag=this;if(this.hoveringDrop){iceEv.drop=this.hoveringDrop;iceEv.eventType=Ice.DnD.DROPPED;}else{iceEv.eventType=Ice.DnD.DRAG_CANCEL;}iceEv.submit();if(this.dragGhost==true){this.element=this._original;Element.remove(this._ghost);this._ghost=null;}if(this.options.dragCursor){Element.remove(this._cursor);this._cursor=null;}Draggable.removeMe(this.element.id);}}this.ORIGINAL_finishDrag(D,E);DropRegions.init=false;DropRegions.map=[];if(this.options.sort&&E){try{var C=Ice.util.findForm(this.element);var B=new Object();Ice.DnD.logger.debug("Submitting Sortable ["+this.element+"]");iceSubmit(C,this.element,B);}catch(A){Ice.DnD.logger.error("error submiting sortable element["+this.element+"] Err Msg["+A+"]");}}};