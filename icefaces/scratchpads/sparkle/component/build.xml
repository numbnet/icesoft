<project name="sparkle-comps" default="dist" basedir=".">
    <description>
        Component build file
    </description>
  <property file="build.properties"/>    
  <property name="src" location="src"/>
  <property name="resources" location="resources"/>  
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="conf"  location="conf"/>
  <property name="bin"  location="bin/"/>
  <property name="exploded"  location="${build}/exploded"/>
  <property name="doc" location="${build}/doc"/>
  <property name="tld.doc" location="${doc}/tld"/>
  <property name="tld.file"   location="${build}/exploded/META-INF/components.tld"/>
  <property name="tld.jar"  location="../../glimmer/lib/"/>

  <dirname property="smartsprites.basedir" file="${ant.file.smartsprites}"/>
  <path id="compile.run.classpath">
  	    <fileset dir="${icefaces.lib.dir}" includes="*.jar"/>
        <pathelement path="../component/src"/>
        <pathelement path="../generator/build"/>
        <pathelement path="../component/build/meta"/>

  </path>
  
	<!-- include source images and css for sprite generation -->
	<macrodef name="includeresources">
		<attribute name="dir"/>
		<attribute name="name"/>
		<attribute name="skin"/>
		<sequential>
			<mkdir dir="${root.dir.path}/@{skin}" />
			<mkdir dir="${root.dir.path}/@{skin}/@{name}" />
			<copy todir="${root.dir.path}/@{skin}/@{name}">
				<fileset dir="@{dir}/@{skin}" includes="**" />
			</copy>
		</sequential>
	</macrodef>
	
	<!-- check for any file modifications and call smartsprites -->
	<macrodef name="generatesprites">
		<attribute name="skin"/>
		<sequential>
			<mkdir dir="${root.dir.path}/@{skin}/base" />
			<copy todir="${root.dir.path}/@{skin}/base" file="${smartsprites.basedir}/smartsprites/base.css" />
			<fileset id="@{skin}.files" dir="${root.dir.path}/@{skin}">
				<modified/>
			</fileset>
			<pathconvert property="@{skin}.modified" refid="@{skin}.files" setonempty="false" />
			<antcall target="smartsprites">
				<param name="skin" value="@{skin}"/>
			</antcall>
		</sequential>
	</macrodef>

  <target name="compile" depends="prepare, generator-dist, compile-meta, generate" 
        description="compile the source " >
    
    <javac srcdir="${build}/generated/base" destdir="${exploded}" debug="true">
        <classpath refid="compile.run.classpath"/>
    </javac>
      
    <javac srcdir="${src}" destdir="${build}/exploded" debug="true" excludes="**/*Meta.java">
    	<classpath refid="compile.run.classpath"/>
    </javac>  

    <javac srcdir="${build}/generated/support" destdir="${exploded}" debug="true">
        <classpath refid="compile.run.classpath"/>
    </javac> 
    
    <copy todir="${exploded}/META-INF/resources">
	    <fileset dir="${resources}"/>
    </copy>    
  </target>
    
  <target name="prepare">
    <mkdir dir="${build}/meta"/>
    <mkdir dir="${exploded}"/>
    <mkdir dir="${build}/generated"/>
    <mkdir dir="${build}/generated/base"/>
    <mkdir dir="${build}/generated/support"/>
  </target>

  <target name="generator-dist">
    <ant inheritAll="false" antfile="../generator/build.xml" target="dist"/>
  </target>
    
  <target  name="compile-meta">
    <javac srcdir="${src}" destdir="${build}/meta" debug="true" includes="**/*Meta.java">
        <classpath refid="compile.run.classpath"/>
    </javac>   
  </target>
    
  <target name="generate" >
    <ant inheritAll="false" antfile="../generator/build.xml" target="generate"/>
  </target>

  <target name="dist" depends="sprites,compile" 
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/${ant.project.name}.jar" basedir="${exploded}"/>
  </target>

  <target name="clean"
        description="clean up" >

  	<!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
	
	<!-- Delete sprite-related files -->
	<delete dir="${root.dir.path}" />
	<delete includeemptydirs="true">
		<fileset dir="resources/org.icefaces.component.sprites" includes="**" />
	</delete>
	<delete file="cache.properties" />

  </target>
  
	<target name="sprites" description="Prepare files to generate sprites.">

		<available file="${smartsprites.basedir}/build.properties" property="smartsprites.properties.available" />
		<fail unless="smartsprites.properties.available">

	Please provide SmartSprite parameters in a 'build.properties' file.

		</fail>
		
		<property file="${smartsprites.basedir}/build.properties" />
		
		<taskdef resource="smartsprites.xml">
		  <classpath>
			<fileset dir="${smartsprites.basedir}/smartsprites">
			  <include name="*.jar" />
			</fileset>
		  </classpath>
		</taskdef>
		
		<mkdir dir="${root.dir.path}" />
		<!--
			Specify resources to include in sprite generation. This is done on a per-component, per-skin basis.
			'dir' is the root directory that contains the sprite sources for the different skins for a component.
			'skin' is the name of the directory inside 'dir' to look for the files for a specific skin.
			'name' is the output name of the directory that will contain the generated files for the component inside the skin directory.
		-->
		<includeresources dir="src\org\icefaces\component\selectinputdate\sprites" name="calendar" skin="sam" />
		<includeresources dir="src\org\icefaces\component\pushbutton\sprites" name="button" skin="sam" />
		<includeresources dir="src\org\icefaces\component\slider\sprites" name="slider" skin="sam" />
		<includeresources dir="src\org\icefaces\component\tab\sprites" name="tabset" skin="sam" />
		<includeresources dir="src\org\icefaces\component\selectinputdate\sprites" name="calendar" skin="rime" />
		
		<!-- Specify the names of the skins to process, based on the resources included above. -->
		<generatesprites skin="sam" />
		<generatesprites skin="rime" />
		
	</target>
  
  
  <target name="smartsprites" description="Performs CSS sprite processing." if="${skin}.modified">

    <smartsprites rootdir="${root.dir.path}\${skin}"
                  documentrootdir="${document.root.dir.path}"
                  outputdir="${output.dir.path}\${skin}"
                  cssfileencoding="${css.file.encoding}"
                  cssfilesuffix="${css.file.suffix}"
                  loglevel="${log.level}"
                  spritepngdepth="${sprite.png.depth}"
                  spritepngie6="${sprite.png.ie6}" />
  </target>

    <macrodef name="gen.tld.doc">
        <attribute name="tld.file"/>
        <sequential>
            <delete dir="${tld.doc}"/>
    		<mkdir dir="${tld.doc}"/>
            <java jar="${tld.jar}/tlddoc.jar" fork="true" failonerror="true">
                <arg value="-d"/>
                <arg value="${tld.doc}"/>
                <arg value="-doctitle"/>
                <arg value="Sparkle Components"/>
                <arg value="-windowtitle"/>
                <arg value="Sparkle Components"/>
                <arg value="@{tld.file}"/>
            </java>
        </sequential>
    </macrodef>


    <target name="tlddoc">
        <gen.tld.doc tld.file="${tld.file}"/>
    </target>
</project>
