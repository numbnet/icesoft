<project name="sparkle-comps" default="dist" basedir=".">
    <description>
        Component build file
    </description>
  <property file="build.properties"/>    
  <property name="src" location="src"/>
  <property name="resources" location="resources"/>  
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="conf"  location="conf"/>
  <property name="bin"  location="bin/"/>
  <property name="exploded"  location="${build}/exploded"/>
  <dirname property="smartsprites.basedir" file="${ant.file.smartsprites}"/>
  <path id="compile.run.classpath">
  	    <fileset dir="${icefaces.lib.dir}" includes="*.jar"/>
        <pathelement path="../component/src"/>
        <pathelement path="../generator/build"/>
        <pathelement path="../component/build/meta"/>

  </path>
    

  <target name="compile" depends="prepare, generator-dist, compile-meta, generate" 
        description="compile the source " >
    
    <javac srcdir="${build}/generated/base" destdir="${exploded}" debug="true">
        <classpath refid="compile.run.classpath"/>
    </javac>
      
    <javac srcdir="${src}" destdir="${build}/exploded" debug="true" excludes="**/*Meta.java">
    	<classpath refid="compile.run.classpath"/>
    </javac>  

    <javac srcdir="${build}/generated/support" destdir="${exploded}" debug="true">
        <classpath refid="compile.run.classpath"/>
    </javac> 
    
    <copy todir="${exploded}/META-INF/resources">
	    <fileset dir="${resources}"/>
    </copy>    
  </target>
    
  <target name="prepare">
    <mkdir dir="${build}/meta"/>
    <mkdir dir="${exploded}"/>
    <mkdir dir="${build}/generated"/>
    <mkdir dir="${build}/generated/base"/>
    <mkdir dir="${build}/generated/support"/>
  </target>

  <target name="generator-dist">
    <ant inheritAll="false" antfile="../generator/build.xml" target="dist"/>
  </target>
    
  <target  name="compile-meta">
    <javac srcdir="${src}" destdir="${build}/meta" debug="true" includes="**/*Meta.java">
        <classpath refid="compile.run.classpath"/>
    </javac>   
  </target>
    
  <target name="generate" >
    <ant inheritAll="false" antfile="../generator/build.xml" target="generate"/>
  </target>

  <target name="dist" depends="sprites,compile" 
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/${ant.project.name}.jar" basedir="${exploded}"/>
  </target>

  <target name="clean"
        description="clean up" >

  	<!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
	
	
	<!-- delete generated sprites -->
    <condition property="delete.sprites">
      <not>
	    <available file="cache.properties" />
      </not>
    </condition>
	
	<antcall target="sprites-clean" />

  </target>
  
  <target name="sprites-clean" if="delete.sprites">
	<delete dir="./resources/org.icefaces.component.sprites/out"/>
  </target>
  
<target name="sprites-check" description="Check whether sprites need to be rebuilt">
    <available file="${smartsprites.basedir}/build.properties" property="smartsprites.properties.available" />
    <fail unless="smartsprites.properties.available">

Please provide SmartSprite parameters in a 'build.properties' file.

    </fail>
	
    <property file="${smartsprites.basedir}/build.properties" />
    <taskdef resource="smartsprites.xml">
      <classpath>
        <fileset dir="${smartsprites.basedir}/smartsprites">
          <include name="*.jar" />
        </fileset>
      </classpath>
    </taskdef>
	
    <fileset id="sprite-files" dir="${root.dir.path}">
        <modified/>
    </fileset>
	
    <pathconvert property="sprites.modified.files" 
                 refid="sprite-files" 
                 setonempty="false"/>
	
</target>
  
  <target name="sprites" description="Performs CSS sprite processing" depends="sprites-check" if="sprites.modified.files">

    <smartsprites rootdir="${root.dir.path}"
                  documentrootdir="${document.root.dir.path}"
                  outputdir="${output.dir.path}"
                  cssfileencoding="${css.file.encoding}"
                  cssfilesuffix="${css.file.suffix}"
                  loglevel="${log.level}"
                  spritepngdepth="${sprite.png.depth}"
                  spritepngie6="${sprite.png.ie6}" />
  </target>
  
  <!-- delete sprite source files last modified info to force sprite generation -->
  <target name="sprites-reset">
    <delete file="cache.properties" />
    <delete dir="./resources/org.icefaces.component.sprites/out" />
  </target>
</project>
