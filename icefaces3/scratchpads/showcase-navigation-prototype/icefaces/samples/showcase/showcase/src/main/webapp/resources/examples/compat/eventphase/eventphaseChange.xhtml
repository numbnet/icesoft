<?xml version="1.0"?>
<!--
  ~ Version: MPL 1.1
  ~
  ~ The contents of this file are subject to the Mozilla Public License
  ~ Version 1.1 (the "License"); you may not use this file except in
  ~ compliance with the License. You may obtain a copy of the License at
  ~ http://www.mozilla.org/MPL/
  ~
  ~ Software distributed under the License is distributed on an "AS IS"
  ~ basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing rights and limitations under
  ~ the License.
  ~
  ~ The Original Code is ICEfaces 1.5 open source software code, released
  ~ November 5, 2006. The Initial Developer of the Original Code is ICEsoft
  ~ Technologies Canada, Corp. Portions created by ICEsoft are Copyright (C)
  ~ 2004-2011 ICEsoft Technologies Canada, Corp. All Rights Reserved.
  ~
  ~ Contributor(s): _____________________.
  -->

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://java.sun.com/jsf/html" 
    xmlns:f="http://java.sun.com/jsf/core" 
    xmlns:c="http://java.sun.com/jsp/jstl/core" 
    xmlns:ace="http://www.icefaces.org/icefaces/components" 
    xmlns:ice="http://www.icesoft.com/icefaces/component"
    xmlns:icecore="http://www.icefaces.org/icefaces/core"
    xmlns:ui="http://java.sun.com/jsf/facelets" 
    template="/resources/templates/content-template.xhtml">
    
    <ui:param name="title" value="#{msgs[eventphaseChange.title]}"/>
    <ui:param name="description" value="#{msgs[eventphaseChange.description]}"/>
    <ui:param name="resourceValue" value="#{eventphaseChange.exampleResource}"/>
    
    <ui:define name="example">
        <p><b>Demo Use Cases:</b></p>
        <p><b>1.</b> Check "Choose Random Number" to true. Then press "Submit".</p>
        <p>In the Event Log you can see a number was generated and set through a valueChangeListener.
        However the number was then overwritten by the rest of the lifecycle where the value in the inputText field was set into the bean.</p>
        <p><b>2.</b> Check "Enable Set Event Phase" to true and press "Apply". Uncheck "Choose Random Number" and press "Submit".</p>
        <p>Since setEventPhase has been enabled, we can try the use case again and see the difference.</p>
        <p><b>3.</b> Check "Choose Random Number" to true. Then press "Submit".</p>
        <p>In the Event Log you will now see that the normal lifecycle set applying the value in the inputText field to the bean. And then the valueChangeListener fires, since it was moved to a later lifecycle phase thanks to setEventPhase.</p>
        <p>Now when the new random number is generated and set it isn't overwritten, and appears on the page as expected.</p>
        <br/>
            
        <h:form>
            <icecore:singleSubmit/>
            <h:panelGrid columns="3">
                <h:outputLabel for="enableIn" value="Enable Set Event Phase?"/>
                <h:selectBooleanCheckbox id="enableIn" value="#{eventphaseChange.enable}"/>
                <h:message for="enableIn"/>
            </h:panelGrid>
        </h:form>
        
        <hr width="100%"/>
        
        <h:form>            
            <h:panelGrid columns="3">
                <h:outputLabel for="randomIn" value="Choose Random Number?"/>
                <ice:setEventPhase events="ValueChangeEvent"
                                   phase="INVOKE_APPLICATION"
                                   disabled="#{!eventphaseChange.enable}">
                    <h:selectBooleanCheckbox id="randomIn"
                                             value="#{eventphaseChange.useRandom}"
                                             valueChangeListener="#{eventphaseChange.checkboxChanged}"/>
                </ice:setEventPhase>
                <h:message for="randomIn"/>
                
                <h:outputLabel for="numberIn" value="Favorite Number:"/>
                <h:inputText id="numberIn" value="#{eventphaseChange.number}"
                             required="true" size="5" maxlength="5">
                     <f:validateLongRange minimum="#{eventphaseChange.minNumber}"
                                          maximum="#{eventphaseChange.maxNumber}"/>
                </h:inputText>
                <h:message for="numberIn"/>
            </h:panelGrid>
            
            <h:commandButton value="Submit"/>
        </h:form>
        
        <br/>
        
        <h:form>
            <h:dataTable value="#{eventphaseChange.eventLog}"
                         var="event"
                         style="border: 1px solid #CDCDCD; padding: 10px;"
                         width="100%" cellspacing="0" cellpadding="2"
                         rows="#{eventphaseChange.logSize}">
                 <h:column>
                     <f:facet name="header">
                        Event Log
                     </f:facet>
                     #{event}
                 </h:column>
            </h:dataTable>
        </h:form>
    </ui:define>
</ui:composition>
