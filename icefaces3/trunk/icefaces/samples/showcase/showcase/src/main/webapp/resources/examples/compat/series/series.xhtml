<?xml version="1.0"?>
<!--
  ~ Version: MPL 1.1
  ~
  ~ The contents of this file are subject to the Mozilla Public License
  ~ Version 1.1 (the "License"); you may not use this file except in
  ~ compliance with the License. You may obtain a copy of the License at
  ~ http://www.mozilla.org/MPL/
  ~
  ~ Software distributed under the License is distributed on an "AS IS"
  ~ basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing rights and limitations under
  ~ the License.
  ~
  ~ The Original Code is ICEfaces 1.5 open source software code, released
  ~ November 5, 2006. The Initial Developer of the Original Code is ICEsoft
  ~ Technologies Canada, Corp. Portions created by ICEsoft are Copyright (C)
  ~ 2004-2011 ICEsoft Technologies Canada, Corp. All Rights Reserved.
  ~
  ~ Contributor(s): _____________________.
  -->

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://java.sun.com/jsf/html" 
    xmlns:f="http://java.sun.com/jsf/core" 
    xmlns:c="http://java.sun.com/jsp/jstl/core" 
    xmlns:ace="http://www.icefaces.org/icefaces/components" 
    xmlns:ice="http://www.icesoft.com/icefaces/component" 
    xmlns:ui="http://java.sun.com/jsf/facelets" 
    template="/resources/templates/content-template.xhtml">
    
    <ui:param name="title" value="#{msgs[series.title]}"/>
    <ui:param name="description" value="#{msgs[series.description]}"/>
    <ui:param name="resourceValue" value="#{series.exampleResource}"/>
    
    <ui:define name="example">
        <p><b>Demo Use Cases:</b></p>
        <p><b>1.</b> Observe the panel series component iteratively displaying a list of employee records.</p>
        <p>The panel series component is an iterator that allows a developer to display an arbitrary list of data, similar to a data table (but without requiring an underlying HTML <i>table</i>).</p>
        <p>Data can dynamically be added or removed to the list on the server and the changes will be reflected in the panel series. Also the style, displayed rows, etc. can be customized for the component.</p>
        <br/>
    
        <h:form>
            <ice:panelSeries value="#{seriesData.employees}"
                             var="employee"
                             rows="#{seriesRows.defaultRows}">
                 <h:panelGrid columns="2" cellspacing="0" cellpadding="3"
                              columnClasses="col25,col75"
                              styleClass="employeeTable">
                    <f:facet name="header">
                        Employee Record
                    </f:facet>
                    <h:outputLabel for="id" value="ID:"/>
                    <h:outputText id="id" value="#{employee.id}"/>
                    
                    <h:outputLabel for="name" value="Name:"/>
                    <h:outputText id="name" value="#{employee.firstName} #{employee.lastName}"/>
                    
                    <h:outputLabel for="address" value="Address:"/>
                    <h:outputText id="address" value="#{employee.address}"/>
                    
                    <h:outputLabel for="salary" value="Salary:"/>
                    <h:outputText id="salary" value="#{employee.salary}">
                        <f:convertNumber type="currency" currencySymbol="$"/>
                    </h:outputText>
                 </h:panelGrid>
                 <br/>
            </ice:panelSeries>
        </h:form>
    </ui:define>
</ui:composition>
