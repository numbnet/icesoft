<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Version: MPL 1.1
  ~
  ~ The contents of this file are subject to the Mozilla Public License
  ~ Version 1.1 (the "License"); you may not use this file except in
  ~ compliance with the License. You may obtain a copy of the License at
  ~ http://www.mozilla.org/MPL/
  ~
  ~ Software distributed under the License is distributed on an "AS IS"
  ~ basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing rights and limitations under
  ~ the License.
  ~
  ~ The Original Code is ICEfaces 1.5 open source software code, released
  ~ November 5, 2006. The Initial Developer of the Original Code is ICEsoft
  ~ Technologies Canada, Corp. Portions created by ICEsoft are Copyright (C)
  ~ 2004-2011 ICEsoft Technologies Canada, Corp. All Rights Reserved.
  ~
  ~ Contributor(s): _____________________.
  -->
  
&input-common-props;
&input-textarea-props;
&ice-att-immediate-props; 

<property>
	<description>
	   <![CDATA[
	 	Space-separated list of CSS style class(es) to be applied when this 
	 	element is rendered. This value must be passed through as the "class" 
	 	attribute on generated markup. <br/>
	 	   
	 	The base name for all style classes. Default value is <b>iceInpTxtArea</b>
	 	if enabled and <b>iceInpTxtArea-dis</b> if disabled.
		]]>		
	</description>  
    <property-name>styleClass</property-name>
    <property-extension>
        <category>JAVASCRIPT</category>
        <editor-class>
             &styleClassEditor;
        </editor-class>
    </property-extension>
</property>

<property>
	<description>
	   <![CDATA[
		The maximum number of characters that may be entered in this field.<br/>
        This is not in the HTML specification for textarea, so it has been 
        implemented in Javascript. The caveat is that characters beyond the limit
        may appear briefly, before the ending of the text is truncated.
		]]>		
    </description>  
  
    <property-name>maxlength</property-name>
    <property-class>int</property-class>    
    <property-extension>
        <category>ADVANCED</category>
		<editor-class>
			&integerEditor;
		</editor-class>
		<named-value>
			<name>minValue</name>
			<expression>new Integer(0)</expression>
		</named-value>
		<named-value>
			<name>unsetValue</name>
			<expression>new Integer(Integer.MIN_VALUE)</expression>
		</named-value>
    </property-extension>
</property>
