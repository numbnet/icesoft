<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Version: MPL 1.1
  ~
  ~ The contents of this file are subject to the Mozilla Public License
  ~ Version 1.1 (the "License"); you may not use this file except in
  ~ compliance with the License. You may obtain a copy of the License at
  ~ http://www.mozilla.org/MPL/
  ~
  ~ Software distributed under the License is distributed on an "AS IS"
  ~ basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing rights and limitations under
  ~ the License.
  ~
  ~ The Original Code is ICEfaces 1.5 open source software code, released
  ~ November 5, 2006. The Initial Developer of the Original Code is ICEsoft
  ~ Technologies Canada, Corp. Portions created by ICEsoft are Copyright (C)
  ~ 2004-2011 ICEsoft Technologies Canada, Corp. All Rights Reserved.
  ~
  ~ Contributor(s): _____________________.
  -->
&ice-att-style-props;
&actionsource-props;
<property>
    <description>
        List of "," separated events (e.g) events="click[, keydown, ...]".
    </description>
    <property-name>events</property-name>
    <property-class>java.lang.String</property-class>
    <property-extension>
        <category>ICE_LAYOUT</category>
        <editor-class>
            &stringEditor;
        </editor-class>
    </property-extension>
</property>

<property>
    <description>
     <![CDATA[
        Its an optional attribute. Can be used to define a callback handlers 
        for the events listed in "events" attribute(e.g.) <br/>
        &lt;ice:jsEventListener events="click" handler="myClickHandler"&gt;<br/> 
        .... <br/><br/>       

        &lt;ice:jsEventListener events="click, keydown" handler="myHandler"&gt;<br/>
        ....
         ]]>  
    </description>
    <property-name>handler</property-name>
    <property-class>java.lang.String</property-class>
    <property-extension>
        <category>ICE_LAYOUT</category>
        <editor-class>
            &stringEditor;
        </editor-class>
    </property-extension>
</property>

<property>
    <description>
       <![CDATA[
        Space-separated list of CSS style class(es) to be applied when this 
        element is rendered. This value must be passed through as the "class" 
        attribute on generated markup. <br/>
        ]]>     
    </description>  
    <property-name>styleClass</property-name>
    <property-extension>
        <category>JAVASCRIPT</category>
        <editor-class>
            &styleClassEditor;
        </editor-class>
    </property-extension>
</property>