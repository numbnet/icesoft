<?xml version="1.0"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml" 
    xmlns:h="http://java.sun.com/jsf/html" 
    xmlns:f="http://java.sun.com/jsf/core" 
    xmlns:c="http://java.sun.com/jsp/jstl/core" 
    xmlns:ace="http://www.icefaces.org/icefaces/components" 
    xmlns:ice="http://www.icesoft.com/icefaces/component" 
    xmlns:ui="http://java.sun.com/jsf/facelets" 
    template="/resources/templates/content-template.xhtml">
    
    <ui:param name="title" value="#{msgs[effectBean.title]}"/>
    <ui:param name="description" value="#{msgs[effectBean.description]}"/>
    <ui:param name="resourceValue" value="#{effectBean.exampleResource}"/>
    
    <ui:define name="example">
        <p><b>Demo Use Cases:</b></p>
        <p><b>1.</b> Choose an effect from the dropdown, which has all available effects provided by this component.</p>
        <p><b>2.</b> Click "Fire Effect" to display the effect on the text in the box below.</p>
        <p>Effects are useful for easily leveraging Javascript without having to worry about the underlying code. Developers can simply add an effect attribute to a panel group and set when to fire the effect.</p>
        <p>Duration of the effect animation, customization of the colors, location, size, etc. of the effect are also possible. Multiple effects can be chained together to meet any developer needs.</p>
        <br/>
    
        <h:form>
            <h:panelGrid columns="4">
                <h:outputLabel for="selected" value="Select an Effect:"/>
                <h:selectOneMenu id="selected"
                                 value="#{effectBean.selectedEffect}"
                                 valueChangeListener="#{effectBean.changeEffect}"
                                 required="true">
                     <f:selectItems value="#{effectBean.availableEffects}"/>
                </h:selectOneMenu>
                <h:commandButton value="Fire Effect" actionListener="#{effectBean.fireEffect}"/>
                <h:message for="selected"/>
            </h:panelGrid>
            
            <ice:panelGroup effect="#{effectBean.currentEffect}"
                            style="border: 1px solid black;">
                <h:outputText value="ICEfaces Effect"
                              style="font-weight: bold;"/>
                <br/>
                <h:outputText value="Selected #{effectBean.currentEffect}"
                              style="padding: 10px;"/>
            </ice:panelGroup>
        </h:form>
    </ui:define>
</ui:composition>
