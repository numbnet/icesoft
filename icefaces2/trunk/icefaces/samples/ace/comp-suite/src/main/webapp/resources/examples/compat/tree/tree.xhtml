<?xml version="1.0"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml" 
    xmlns:h="http://java.sun.com/jsf/html" 
    xmlns:f="http://java.sun.com/jsf/core" 
    xmlns:c="http://java.sun.com/jsp/jstl/core" 
    xmlns:ace="http://www.icefaces.org/icefaces/components" 
    xmlns:ice="http://www.icesoft.com/icefaces/component" 
    xmlns:ui="http://java.sun.com/jsf/facelets" 
    template="/resources/templates/content-template.xhtml">
    
    <ui:param name="title" value="#{msgs[tree.title]}"/>
    <ui:param name="description" value="#{msgs[tree.description]}"/>
    <ui:param name="resourceValue" value="#{tree.exampleResource}"/>
    
    <ui:define name="example">
        <p><b>Demo Use Cases:</b></p>
        <p><b>1.</b> Expand and contract the different nodes in the tree.</p>
        <p><b>2.</b> Click the "Regenerate" button to randomly create a new set of data for the tree.</p>
        <p>The tree component is used for displaying parent-child data in a hierarchical fashion. This style of display is common in businesses as a wide variety of data can be managed while users can still easily understand the layout.</p>
        <p>The text and icon of each node and leaf can be customized as needed, as can many attributes of the tree itself.</p>
        <p>This component is built on top of the Swing JTree, so developers familiar with that node approach will see similarities in the tree component.</p>
        <br/>
        
        <h:form>
            <h:commandButton value="Regenerate"
                             actionListener="#{tree.refreshTree}"/>
            <br/>
            
            <ice:tree value="#{tree.model}"
                      var="node"
                      hideRootNode="false"
                      hideNavigation="false">
                <ice:treeNode>
                    <f:facet name="icon">
                        <h:graphicImage value="#{node.userObject.icon}"/>
                    </f:facet>
                    <f:facet name="content">
                        #{node.userObject.text}
                    </f:facet>
                </ice:treeNode>
            </ice:tree>
        </h:form>
    </ui:define>
</ui:composition>
