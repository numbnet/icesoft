#
# Version: MPL 1.1
#
# The contents of this file are subject to the Mozilla Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations under
# the License.
#
# The Original Code is ICEfaces 1.5 open source software code, released
# November 5, 2006. The Initial Developer of the Original Code is ICEsoft
# Technologies Canada, Corp. Portions created by ICEsoft are Copyright (C)
# 2004-2011 ICEsoft Technologies Canada, Corp. All Rights Reserved.
#
# Contributor(s): _____________________.
#
showcase.title = ICEsoft Component Suite
menu.ace.title = ACE Components
menu.compat.title = COMPAT Components
menu.ee.title = EE Components

################################################################################
# ICEfaces Advanced Components (ACE)                                           #
################################################################################

### ACE - Slider
menu.ace.slider.title = Slider
menu.ace.slider.subMenu.title = Examples
menu.ace.slider.subMenu.main = Overview
menu.ace.slider.subMenu.basic = Synchronous
menu.ace.slider.subMenu.async = Asynchronous
menu.ace.slider.subMenu.asyncinput = Input
# Overview
example.ace.slider.title = ICEfaces Slider ACE Component
example.ace.slider.description = <p>The SliderEntry example below demonstrates a variety of the attributes available (although the component is commented out as it still doesn't work):</p><ul><li>Setting a value by clicking the slider path.</li><li>A fixed min/max &amp; length.</li><li>Asynchronous submission of the value of the slider.</li></ul>
# Basic
example.ace.slider.basic.title = Basic Slider
example.ace.slider.basic.description = Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur auctor metus at sem tempor molestie. Duis ut velit vitae elit laoreet gravida quis faucibus ante. Sed quis nisi tellus, et hendrerit nisi.
# Asynchronous
example.ace.slider.async.title = Asynchronous Slider
example.ace.slider.async.description = Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur auctor metus at sem tempor molestie. Duis ut velit vitae elit laoreet gravida quis faucibus ante. Sed quis nisi tellus, et hendrerit nisi.
# Ansynchronous Input
example.ace.slider.asyncinput.title = Ansynchronous Input Slider
example.ace.slider.asyncinput.description = Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur auctor metus at sem tempor molestie. Duis ut velit vitae elit laoreet gravida quis faucibus ante. Sed quis nisi tellus, et hendrerit nisi.

### ACE - TabSet
menu.ace.tabSet.title = Tab Set
menu.ace.tabSet.subMenu.title = Examples
menu.ace.tabSet.subMenu.main = Overview
menu.ace.tabSet.subMenu.clientSide = Client Side
menu.ace.tabSet.subMenu.serverSide = Server Side
menu.ace.tabSet.subMenu.proxy = Proxy
# Overview
example.ace.tabSet.title = TabSet Examples
example.ace.tabSet.description = <p>The TabSet Component is used to divvy up the content of a page into panels that are shown one at a time. These panels can either be stored in the browser to reduce load times, or stored in the server to reduce initial bandwidth demands. The component can be run within a form, or have the tabPanes contain their own forms, having the tabSet do communications via a 'TabSet Proxy'.</p><p>The TabSet example below is one without any attributes set. It hosts its tabPanes server-side and has hardcoded labels and content.</p>
# Client Side
example.ace.tabSet.clientSide.title = TabSet Client Side Example
example.ace.tabSet.clientSide.description = <p>Below is a demo of the TabSet component where the contents of the TabPanes are kept loaded in the clients browsers, eliminating any data transfer to change tabs.</p><p>The 'Fast Loading Tabs' option toggles a wait that will occur whenever a tab is fetched from the server.</p>
# Server Side
example.ace.tabSet.serverSide.title = TabSet Server Side Example
example.ace.tabSet.serverSide.description  = <p>Below is a demo of the TabSet component where the contents of the TabPanes are kept in the server, requiring less initial data transfer, but needing to transfer the contents every time the tab is changed.</p><p>The 'Fast Loading Tabs' option toggles a wait that will occur whenever a tab is fetched from the server.</p>
# Proxy
example.ace.tabSet.proxy.title = TabSet Proxy Example
example.ace.tabSet.proxy.description = <p>Below is a demo of the TabSet component where the the tabSetProxy tag is used. This tag allow the tabSet to be located outside of a form, (allowing tabPanes to contain their own forms) while keeping a means to communicate with the server, via a 'proxy' in the nested form specifically for its traffic.</p>

### ACE - FileEntry
menu.ace.fileentry.title = File Entry
menu.ace.fileentry.subMenu.title = Examples
menu.ace.fileentry.subMenu.main = Overview
menu.ace.fileentry.subMenu.basic = Basic
menu.ace.fileentry.subMenu.validation = Validation
menu.ace.fileentry.subMenu.multiple = Multiple
menu.ace.fileentry.subMenu.failpop = Failed Popup
# Overview
example.ace.fileentry.title = File Entry Component
example.ace.fileentry.description = The File Entry ACE Component performs all interface functions regarding file submission.<br/>The example below demonstrates several functions of the File Entry component:<ul><li>A FileEntryListener that adds a message with the uploaded file size and size of the temp directory.</li><li style="text-decoration:line-through;">Limits allows multiple uploads upto 10 files.</li><li style="text-decoration:line-through;">Limits multiple upload total size to 18MB.</li><li>Limits file size to 6MB.</li><li>Requires file for form submission.</li><li>Stores the file with the original filename in a web-root relative path.</li></ul>
# Basic
example.ace.fileentry.basic.title = Basic Upload Example 
example.ace.fileentry.basic.description = <p>The basic file entry example below will receive a file and put it in a sub-directory directly inside the root application directory. That sub-directory will be unique to each session, and all the files uploaded to it will be given randomly generated name.</p><p>The ace:fileEntry tag used on this page doesn't have any attributes set.</p>
# Validation Options
example.ace.fileentry.valid.title = Validation Example 
example.ace.fileentry.valid.description = <p>The file entry example below demonstrates attributes related to the validity of the uploaded file, and the state of the component in the form (disabled/required)</p>
# Multiple File Upload Options
example.ace.fileentry.multiple.title = Multiple Upload Example 
example.ace.fileentry.multiple.description = <p>The file entry example below demonstrates attributes related to functionality of the component that has not yet been completed, though they are documented in the TLD.</p>
# Fail Popup
example.ace.fileentry.failpop.title = Popup Validation Example
example.ace.fileentry.failpop.description = <p>The file entry example below demonstrates a compound example of functionality whose completion that is waiting on a showcase wide popup component.</p>

### ACE - Button
menu.ace.button.title = Buttons
menu.ace.button.subMenu.title = Examples
menu.ace.button.subMenu.main = Overview
menu.ace.button.subMenu.checkbox = Checkbox Button
menu.ace.button.subMenu.push = Push Button
menu.ace.button.subMenu.link = Link Button
# Overview
example.ace.button.title = ACE Button Components
example.ace.button.description = <p>The Button components of the ICEfaces ACE Suite provide all the functionality of the standard JSF implementations while integrating ICEfaces features such as Single Submit. The core functionality of Buttons can be considered to be:</p><ul><li>Action navigation via the application NavigationController and the "action" attribute.</li><li>Present a clickable UI control for a listener</li><li>Do a full form submission when &lt;f:ajax&gt; or singleSubmit is not being used.</li></ul><p>Below is a example of each button configured as the control for a simple listener.</p>
# Checkbox
example.ace.button.checkbox.title = Checkbox Button
example.ace.button.checkbox.description = <p>The CheckboxButton component is an oddball among the Buttons; it binds to a bean boolean and can toggle its value, it doesn't submit forms, and it doesn't have an "action" attribute. It is intended as a styled UI control for boolean values rather than as a hook for events, navigation or form submission.</p><p>Binding to values means the CheckboxButton implements EditableValueHolder, and as such throws ValueChangedEvents as opposed to ActionEvents</p><p>Below is an example of a checkboxButton backing a boolean value. For an example of a checkboxButton and a ValueChangeListener, read the <a href="showcase.jsf?grp=aceMenu&amp;exp=buttonBean">Overview</a> example.</p>
# Push
example.ace.button.push.title = Push Button
example.ace.button.push.description = <p>The PushButton component is the quintessential button control and as such performs the core functionality of a button: executing listeners, action navigation and form submission. </p><p>The example below demonstrates buttons that avoid form submission, perform form submission, perform Action navigation and listener-based view forwarding.</p>
# Link
example.ace.button.link.title = Link Button
example.ace.button.link.description = <p>The LinkButton component performs the core functionality of a button: executing listeners, action navigation and form submission. Additionally, because the component is built around the HTML anchor tag, LinkButton can be used to perform non-jsf "static" HTML navigation from the current URL to a relative or absolute URL.</p><p>The example below demonstrates buttons that avoid form submission, perform form submission, perform Action navigation, HTML navigation and listener-based view forwarding.</p>

### ACE - Logger
menu.ace.logger.title = Logger
menu.ace.logger.subMenu.title = Examples
menu.ace.logger.subMenu.main = Overview
# Overview
example.ace.logger.title = Logger Component
example.ace.logger.description = <p>The ACE Logger component is based around the one offered by the YUI toolkit, providing a standardized way of reading and writing log messages. When the tag is present on the page it adds divs containing the log controls to the root of the DOM. In this example, to prevent root placement from breaking page flow, the class .yui-log-container is positioned to fixed values similarly to a popup. The logs will have a record for every Javascript call to YAHOO.log().</p><p>The example below has a button to display the logger and some example controls to generate arbitrary Javascript messages using YAHOO.log().</p>

### ACE - Date Entry
menu.ace.dateentry.title = Date Entry
menu.ace.dateentry.subMenu.title = Examples
menu.ace.dateentry.subMenu.main = Overview
menu.ace.dateentry.subMenu.popup = Popup
menu.ace.dateentry.subMenu.ajax = Ajax Submit
menu.ace.dateentry.subMenu.pages = Multiple Months
menu.ace.dateentry.subMenu.navigator = Navigator
# Overview
example.ace.dateentry.title = Date Entry Component
example.ace.dateentry.description = Component to input or select a date
example.ace.dateentry.popup.title = Date Entry Popup
example.ace.dateentry.popup.description = View either the popup or input text version
example.ace.dateentry.ajax.title = Date Entry Ajax Submit
example.ace.dateentry.ajax.description = Submit the date using Ajax
example.ace.dateentry.pages.title = Date Entry Multiple Months
example.ace.dateentry.pages.description = Display multiple pages of months in a single calendar
example.ace.dateentry.navigator.title = Date Entry Dropdown Navigator
example.ace.dateentry.navigator.description = Display the year and month as a dropdown

### ACE - Data Table
menu.ace.dataTable.title = Data Table
menu.ace.dataTable.subMenu.title = Examples
menu.ace.dataTable.subMenu.main = Overview
menu.ace.dataTable.subMenu.filtering = Filtering
menu.ace.dataTable.subMenu.sorting = Sorting
menu.ace.dataTable.subMenu.paginator = Paginator
menu.ace.dataTable.subMenu.scrolling = Scrolling
menu.ace.dataTable.subMenu.selector = Row Selector
menu.ace.dataTable.subMenu.listener = Row Listener
# Overview
example.ace.dataTable.title = ACE dataTable Components
example.ace.dataTable.description = Table description
# Filtering
example.ace.dataTable.filtering.title = ACE Data Table Filtering
example.ace.dataTable.filtering.description = Filtering description
# Sorting
example.ace.dataTable.sorting.title = ACE Data Table Sorting
example.ace.dataTable.sorting.description = Sorting description
# Paginator
example.ace.dataTable.paginator.title = ACE Data Table Paginator
example.ace.dataTable.paginator.description = Paginator description
# Scrolling
example.ace.dataTable.scrolling.title = ACE Data Table Scrolling
example.ace.dataTable.scrolling.description = Scrolling description
# Selector
example.ace.dataTable.selector.title = ACE Data Table Row Selector
example.ace.dataTable.selector.description = Selector description
# Listener
example.ace.dataTable.listener.title = ACE Data Table Row Listener
example.ace.dataTable.listener.description = Listener description

### ACE - Data Table
menu.ace.dataExporter.title = Data Exporter
menu.ace.dataExporter.subMenu.title = Examples
menu.ace.dataExporter.subMenu.main = Overview
menu.ace.dataExporter.subMenu.columns = Specify Columns
# Overview
example.ace.dataExporter.title = ACE dataExporter Components
example.ace.dataExporter.description = Exporter description
# Columns
example.ace.dataExporter.columns.title = ACE Data Exporter Specify Columns
example.ace.dataExporter.columns.description = Columns description

### ACE - Menu
menu.ace.menu.title = Menu
menu.ace.menu.subMenu.title = Examples
menu.ace.menu.subMenu.main = Overview
menu.ace.menu.subMenu.type = Type
menu.ace.menu.subMenu.events = Events
menu.ace.menu.subMenu.effect = Effects
menu.ace.menu.subMenu.display = Display
menu.ace.menu.subMenu.dynamic = Dynamic
# Overview
example.ace.menu.title = ACE Menu Components
example.ace.menu.description = Menu description
# Type
example.ace.menu.type.title = ACE Menu Type
example.ace.menu.type.description = Type description
# Events
example.ace.menu.events.title = ACE Menu Events
example.ace.menu.events.description = Events description
# Effects
example.ace.menu.effect.title = ACE Menu Effects
example.ace.menu.effect.description = Effects description
# Display
example.ace.menu.display.title = ACE Menu Display
example.ace.menu.display.description = Display description
# Dynamic
example.ace.menu.dynamic.title = ACE Menu Dynamic
example.ace.menu.dynamic.description = Dynamic description

### ACE - Menu Bar
menu.ace.menuBar.title = Menu Bar
menu.ace.menuBar.subMenu.title = Examples
menu.ace.menuBar.subMenu.main = Overview
menu.ace.menuBar.subMenu.effect = Effects
menu.ace.menuBar.subMenu.click = Click to Display
menu.ace.menuBar.subMenu.dynamic = Dynamic
# Overview
example.ace.menuBar.title = ACE Menu Bar Components
example.ace.menuBar.description = Menu Bar description
# Effects
example.ace.menuBar.effect.title = ACE Menu Bar Effects
example.ace.menuBar.effect.description = Effects description
# Click to Display
example.ace.menuBar.click.title = ACE Menu Bar Click
example.ace.menuBar.click.description = Click description
# Dynamic
example.ace.menuBar.dynamic.title = ACE Menu Bar Dynamic
example.ace.menuBar.dynamic.description = Dynamic description

### ACE - Context Menu
menu.ace.contextMenu.title = Context Menu
menu.ace.contextMenu.subMenu.title = Examples
menu.ace.contextMenu.subMenu.main = Overview
menu.ace.contextMenu.subMenu.global = Global
menu.ace.contextMenu.subMenu.component = Component
menu.ace.contextMenu.subMenu.table = In a Table
menu.ace.contextMenu.subMenu.effect = Effect
# Overview
example.ace.contextMenu.title = ACE Context Menu Components
example.ace.contextMenu.description = Context Menu description
# Global
example.ace.contextMenu.global.title = ACE Context Menu Global
example.ace.contextMenu.global.description = Global description
# Component
example.ace.contextMenu.component.title = ACE Context Menu Component
example.ace.contextMenu.component.description = Component description
# In Table
example.ace.contextMenu.table.title = ACE Context Menu In Table
example.ace.contextMenu.table.description = In Table description
# Effect
example.ace.contextMenu.effect.title = ACE Context Menu Effect
example.ace.contextMenu.effect.description = Effect description

### ACE - Panel
menu.ace.panel.title = Panel
menu.ace.panel.subMenu.title = Examples
menu.ace.panel.subMenu.main = Overview
menu.ace.panel.subMenu.header = Headers
menu.ace.panel.subMenu.toggle = Toggleable
menu.ace.panel.subMenu.close = Closeable
menu.ace.panel.subMenu.listener = Listeners
menu.ace.panel.subMenu.menu = Menu
# Overview
example.ace.panel.title = ACE Panel Components
example.ace.panel.description = Panel description
# Headers
example.ace.panel.header.title = ACE Panel Header and Footer
example.ace.panel.header.description = Header and Footer description
# Toggleable
example.ace.panel.toggle.title = ACE Panel Toggleable
example.ace.panel.toggle.description = Toggleable description
# Closeable
example.ace.panel.close.title = ACE Panel Closeable
example.ace.panel.close.description = Closeable description
# Listener
example.ace.panel.listener.title = ACE Panel Listener
example.ace.panel.listener.description = Listener description
# Menu
example.ace.panel.menu.title = ACE Panel Menu
example.ace.panel.menu.description = Menu description

################################################################################
# ICEfaces Compat Components (COMPAT)                                          #
################################################################################

### COMPAT - Auto Complete
menu.compat.autocomplete.title = Auto Complete
menu.compat.autocomplete.subMenu.title = Examples
menu.compat.autocomplete.subMenu.main = Overview
menu.compat.autocomplete.subMenu.simple = Simple
menu.compat.autocomplete.subMenu.complex = Complex
menu.compat.autocomplete.subMenu.rows = Rows
# Overview
example.compat.autocomplete.title = Auto Complete Example
example.compat.autocomplete.description = Overview of the Auto Complete component.
# Simple
example.compat.autocomplete.simple.title = Auto Complete Simple
example.compat.autocomplete.simple.description = Simple example of the Auto Complete component.
# Complex
example.compat.autocomplete.complex.title = Auto Complete Complex
example.compat.autocomplete.complex.description = Complex example showing advanced formatting of the selectable items.
# Rows
example.compat.autocomplete.rows.title = Auto Complete Rows
example.compat.autocomplete.rows.description = Customize the appearance of the Auto Complete component by modifying the number of displayed rows.

### COMPAT - Border Panel
menu.compat.border.title = Border Layout
menu.compat.border.subMenu.title = Examples
menu.compat.border.subMenu.main = Overview
menu.compat.border.subMenu.layout = Layout
menu.compat.border.subMenu.render = Render
menu.compat.border.subMenu.style = Style
# Overview
example.compat.border.title = Border Layout Example
example.compat.border.description = Component to render
# Layout
example.compat.border.layout.title = Border Layout Options
example.compat.border.layout.description = Customize the layout directly via the "layout" attribute.
# Render
example.compat.border.render.title = Border Layout Render
example.compat.border.render.description = Display or hide individual facets of the layout.
# Style
example.compat.border.style.title = Border Layout Style
example.compat.border.style.description = Customize the style of the border facets.

### COMPAT - Calendar
menu.compat.calendar.title = Calendar
menu.compat.calendar.subMenu.title = Examples
menu.compat.calendar.subMenu.main = Overview
menu.compat.calendar.subMenu.popup = Popup
menu.compat.calendar.subMenu.pattern = Converter Pattern
menu.compat.calendar.subMenu.timezone = Timezones
menu.compat.calendar.subMenu.highlight = Date Highlighting
# Overview
example.compat.calendar.title = Calendar Example
example.compat.calendar.description = Basic calendar component demonstrating the various attributes available.
# Popup
example.compat.calendar.popup.title = Calendar Popup Example
example.compat.calendar.popup.description = Configure the calendar popup appearance.
# Pattern
example.compat.calendar.pattern.title = Calendar Converter Pattern Example
example.compat.calendar.pattern.description = Demonstration of custom date patterns and how they apply to the calendar.
# Timezone
example.compat.calendar.timezone.title = Calendar Timezones Example
example.compat.calendar.timezone.description = Choose a different timezone to see how it applies to the calendar.
# Highlight
example.compat.calendar.highlight.title = Calendar Date Highlighting Example
example.compat.calendar.highlight.description = Highlight specific days or weeks with the calendar.

### COMPAT - Chart
menu.compat.chart.title = Chart
menu.compat.chart.subMenu.title = Examples
menu.compat.chart.subMenu.main = Overview
menu.compat.chart.subMenu.area = Area
menu.compat.chart.subMenu.bar = Bar
menu.compat.chart.subMenu.areaStacked = Area Stacked
menu.compat.chart.subMenu.barStacked = Bar Stacked
menu.compat.chart.subMenu.barClustered = Bar Clustered
menu.compat.chart.subMenu.line = Line
menu.compat.chart.subMenu.point = Point
menu.compat.chart.subMenu.pie2d = Pie 2D
menu.compat.chart.subMenu.pie3d = Pie 3D
menu.compat.chart.subMenu.custom = Custom
menu.compat.chart.subMenu.options = Basic Options
menu.compat.chart.subMenu.dynamic = Dynamic
# Chart
example.compat.chart.title = Chart Examples
example.compat.chart.description = Charts come in various forms.
# Area Chart
example.compat.chart.area.title = Area Chart Examples
example.compat.chart.area.description = Area chart
# Area Stacked
example.compat.chart.areaStacked.title = Area Stacked Chart Example
example.compat.chart.areaStacked.description = Chars come in various forms.
# Bar Chart
example.compat.chart.bar.title = Bar Chart Example
example.compat.chart.bar.description = Bar chart.
# Bar Stacked
example.compat.chart.barStacked.title = Bar Stacked Chart Example
example.compat.chart.barStacked.description = Stacked bars chart.
# Bar Clustered
example.compat.chart.barClustered.title = Bar Clustered Chart Example
example.compat.chart.barClustered.description = Stacked bars chart.
# Line
example.compat.chart.line.title = Line Chart Example
example.compat.chart.line.description = Line chart
# Point
example.compat.chart.point.title = Point Chart Example
example.compat.chart.point.description = Point chart
# Pie2d
example.compat.chart.pie2d.title = Pie2d Chart Example
example.compat.chart.pie2d.description = Pie2d chart
# Pie3D
example.compat.chart.pie3d.title = Pie3D Chart Example
example.compat.chart.pie3d.description = Pie3d chart
# Custom
example.compat.chart.custom.title = Custom Chart Example
example.compat.chart.custom.description = Custom chart
# Options
example.compat.chart.options.title = Basic Options
example.compat.chart.options.description = Generic options to customize the chart. Title, height and width, legend placement.
# Dynamic
example.compat.chart.dynamic.title = Dynamic Chart
example.compat.chart.dynamic.description = Dynamically add or remove data from a chart.

### COMPAT - Connection Status
menu.compat.connectionStatus.title = Connection Status
menu.compat.connectionStatus.subMenu.title = Examples
menu.compat.connectionStatus.subMenu.main = Overview
menu.compat.connectionStatus.subMenu.labels = Labels
menu.compat.connectionStatus.subMenu.style = Style
# Overview
example.compat.connectionStatus.title = Connection Status Example
example.compat.connectionStatus.description = Basic connection status component demonstrating the various attributes available.
# Labels
example.compat.connectionStatus.labels.title = Connection Status Label Example
example.compat.connectionStatus.labels.description = Customize the different labels of the connection status component.
# Style
example.compat.connectionStatus.style.title = Connection Status Style Example
example.compat.connectionStatus.style.description = View the different styles of the connection status component.

### COMPAT - Collapsible
menu.compat.collapsible.title = Collapsible
menu.compat.collapsible.subMenu.title = Examples
menu.compat.collapsible.subMenu.main = Overview
menu.compat.collapsible.subMenu.toggle = Toggle on Click
menu.compat.collapsible.subMenu.expanded = Expanded
menu.compat.collapsible.subMenu.event = Event
menu.compat.collapsible.subMenu.immediate = Immediate
menu.compat.collapsible.subMenu.multiple = Multiple
# Overview
example.compat.collapsible.title = Panel Collapsible Example
example.compat.collapsible.description = Basic overview of the collapsible component, which can easily display or hide child content.
# Toggle on Click
example.compat.collapsible.toggle.title = Toggle on Click Example
example.compat.collapsible.toggle.description = View the effect of the toggleOnClick attribute which will allow the entire header to be clicked or not. 
# Expanded
example.compat.collapsible.expanded.title = Expanded Example
example.compat.collapsible.expanded.description = Control the expanded state from the bean.
# Event
example.compat.collapsible.event.title = Event Example
example.compat.collapsible.event.description = Acting on the event fired when the collapsible component is used.
# Multiple
example.compat.collapsible.multiple.title = Multiple Example
example.compat.collapsible.multiple.description = Demonstration of having multiple collapsible components (with different content) on the same page.

### COMPAT - Columns
menu.compat.columns.title = Columns
menu.compat.columns.subMenu.title = Examples
menu.compat.columns.subMenu.main = Overview
menu.compat.columns.subMenu.checker = Checkerboard
# Overview
example.compat.columns.title = Columns
example.compat.columns.description = Basic overview of the columns component.
# 2D Array
example.compat.columns.checker.title = Columns Checkerboard
example.compat.columns.checker.description = Example rendering a checkerboard using the columns component.

### COMPAT - Confirmation Panel
menu.compat.confirmation.title = Confirmation Panel
menu.compat.confirmation.subMenu.title = Examples
menu.compat.confirmation.subMenu.main = Overview
menu.compat.confirmation.subMenu.label = Labels
menu.compat.confirmation.subMenu.button = Button Type
menu.compat.confirmation.subMenu.display = Display Options
menu.compat.confirmation.subMenu.mouse = Display at Mouse
# Overview
example.compat.confirmation.title = Panel Confirmation Example
example.compat.confirmation.description = Basic overview of the confirmation panel component, which is used to easily display a dialog.
# Labels
example.compat.confirmation.label.title = Labels Example
example.compat.confirmation.label.description = Customize the button labels and popup text. 
# Button Type
example.compat.confirmation.button.title = Button Type Example
example.compat.confirmation.button.description = Choose the different types of buttons to show on the dialog.
# Display Options
example.compat.confirmation.display.title = Display Options Example
example.compat.confirmation.display.description = Customize how the dialog will be displayed.
# Display at Mouse
example.compat.confirmation.mouse.title = Display at Mouse Example
example.compat.confirmation.mouse.description = Demonstrate the ability to display the dialog right by the mouse pointer.

### COMPAT - Data Table (Generic)
menu.compat.dataTable.title = Data Table
menu.compat.dataTable.subMenu.title = Examples
menu.compat.dataTable.subMenu.main = Overview
menu.compat.dataTable.subMenu.rows = Displayed Rows
menu.compat.dataTable.subMenu.group = Column Grouping
menu.compat.dataTable.subMenu.hide = Column Hiding
menu.compat.dataTable.subMenu.resize = Column Resizing
menu.compat.dataTable.subMenu.widths = Column Widths
menu.compat.dataTable.subMenu.client = Client Only Resizing
menu.compat.dataTable.subMenu.sort = Sorting
menu.compat.dataTable.subMenu.scroll = Scrolling
menu.compat.dataTable.subMenu.dynamic = Dynamic
# Overview
example.compat.dataTable.title = Data Table Example
example.compat.dataTable.description = Basic overview of the data table component.
# Rows
example.compat.dataTable.rows.title = Displayed Rows Example
example.compat.dataTable.rows.description = Customize how many rows to display at once. 
# Grouping
example.compat.dataTable.group.title = Column Grouping Example
example.compat.dataTable.group.description = View how column grouping inside a data table looks.
# Hiding
example.compat.dataTable.hide.title = Column Hiding Example
example.compat.dataTable.hide.description = Hide or display columns inside a data table.
# Resizing
example.compat.dataTable.resize.title = Column Resizing Example
example.compat.dataTable.resize.description = Resizable data table.
# Resizing Widths
example.compat.dataTable.widths.title = Column Resizing Widths Example
example.compat.dataTable.widths.description = Customize the widths of the resizable columns.
# Client Only Resizing
example.compat.dataTable.client.title = Client Only Resizing Example
example.compat.dataTable.client.description = Toggle column resizing to be stored only on the client.
# Sorting
example.compat.dataTable.sort.title = Data Table Sorting Example
example.compat.dataTable.sort.description = Sorting a data table.
# Scrolling
example.compat.dataTable.scroll.title = Scrollable Data Table Example
example.compat.dataTable.scroll.description = Scrollable data table.
# Dynamic
example.compat.dataTable.dynamic.title = Dynamic Data Table Example
example.compat.dataTable.dynamic.description = Modify the data table by adding, removing, or updating records.

### COMPAT - Data Table (Exporter)
menu.compat.exporter.title = Data Table Exporter
menu.compat.exporter.subMenu.title = Examples
menu.compat.exporter.subMenu.main = Overview
menu.compat.exporter.subMenu.type = Type
menu.compat.exporter.subMenu.column = Include Columns
menu.compat.exporter.subMenu.pagination = Ignore Pagination
menu.compat.exporter.subMenu.label = Custom Label
# Overview
example.compat.exporter.title = Data Table Exporter
example.compat.exporter.description = Basic overview of the data table exporter component.
# Type
example.compat.exporter.type.title = Exporter Type
example.compat.exporter.type.description = Customize what format the export will be done to. 
# Include Columns
example.compat.exporter.column.title = Exporter Included Columns
example.compat.exporter.column.description = Customize which columns to include in the export.
# Ignore Pagination
example.compat.exporter.pagination.title = Exporter Ignore Pagination
example.compat.exporter.pagination.description = Choose to ignore pagination or not for the exported data.
# Custom Label
example.compat.exporter.label.title = Exporter Custom Label
example.compat.exporter.label.description = Render a button, image, or custom text for the label.

### COMPAT - Data Table (Paginator)
menu.compat.paginator.title = Data Table Paginator
menu.compat.paginator.subMenu.title = Examples
menu.compat.paginator.subMenu.main = Overview
menu.compat.paginator.subMenu.info = Info Paginator
menu.compat.paginator.subMenu.events = Events
menu.compat.paginator.subMenu.max = Max Pages
menu.compat.paginator.subMenu.fast = Fast Step
menu.compat.paginator.subMenu.display = Always Display
menu.compat.paginator.subMenu.vertical = Vertical
# Overview
example.compat.paginator.title = Data Table Paginator
example.compat.paginator.description = Basic overview of the data table paginator component.
# Info
example.compat.paginator.info.title = Information Paginator
example.compat.paginator.info.description = View an information based paginator, which displays text information about the associated data table.
# Events
example.compat.paginator.events.title = Paginator Events
example.compat.paginator.events.description = View the row paginator events that can be fired and listened to.
# Max Pages
example.compat.paginator.max.title = Max Paginator Pages
example.compat.paginator.max.description = Customize how many pages to display at once in the paginator
# Fast Step
example.compat.paginator.fast.title = Fast Step Paginator
example.compat.paginator.fast.description = Customize how many pages to move using fast step.
# Always Display
example.compat.paginator.display.title = Always Display Paginator
example.compat.paginator.display.description = Display the paginator only when needed.
# Vertical
example.compat.paginator.vertical.title = Vertical Paginator
example.compat.paginator.vertical.description = Render the data paginator vertically instead of horizontally.

### COMPAT - Data Table (Row Selector)
menu.compat.selector.title = Data Table Row Selector
menu.compat.selector.subMenu.title = Examples
menu.compat.selector.subMenu.main = Overview
menu.compat.selector.subMenu.type = Type
menu.compat.selector.subMenu.events = Events
menu.compat.selector.subMenu.toggle = Toggle on Input
menu.compat.selector.subMenu.pre = Pre-Style
# Overview
example.compat.selector.title = Data Table Row Selector
example.compat.selector.description = Basic overview of the data table selector component.
# Type
example.compat.selector.type.title = Row Selector Type
example.compat.selector.type.description = Customize the type of row selector.
# Events
example.compat.selector.events.title = Row Selector Events
example.compat.selector.events.description = View the row selector events that can be fired and listened to.
# Toggle on Input
example.compat.selector.toggle.title = Row Selector Toggle on Input
example.compat.selector.toggle.description = Choose whether the selection should toggle when a button or input field in the row is interacted with.
# Pre-Style on Selection
example.compat.selector.pre.title = Row Selector Pre-Style
example.compat.selector.pre.description = Pre-style the CSS for the row selection immediately on the client instead of waiting for the server.

### COMPAT - Divider
menu.compat.divider.title = Divider
menu.compat.divider.subMenu.title = Examples
menu.compat.divider.subMenu.main = Overview
menu.compat.divider.subMenu.orientation = Orientation
menu.compat.divider.subMenu.position = Position
menu.compat.divider.subMenu.content = Dynamic Content
menu.compat.divider.subMenu.embedded = Embedded
# Overview
example.compat.divider.title = Panel Divider Example
example.compat.divider.description = Basic divider demonstrating the component.
# Orientation
example.compat.divider.orientation.title = Panel Divider Orientation
example.compat.divider.orientation.description = View the horizontal or vertical orientation the divider supports.
# Position
example.compat.divider.position.title = Panel Divider Position
example.compat.divider.position.description = Customize the position of the divider bar from the bean.
# Content
example.compat.divider.content.title = Panel Divider Dynamic Content
example.compat.divider.content.description = Dynamically set the content of each pane in the divider component.
# Embedded
example.compat.divider.embedded.title = Panel Divider Embedded
example.compat.divider.embedded.description = Embed one divider component in the pane of another.

### COMPAT - Drag and Drop
menu.compat.dragdrop.title = Drag & Drop
menu.compat.dragdrop.subMenu.title = Examples
menu.compat.dragdrop.subMenu.main = Overview
menu.compat.dragdrop.subMenu.events = Events
menu.compat.dragdrop.subMenu.effect = Effect
# Overview
example.compat.dragdrop.title = Drag & Drop Example
example.compat.dragdrop.description = Basic example of drag and drop
# Events
example.compat.dragdrop.events.title = Drag & Drop Events
example.compat.dragdrop.events.description = View and mask events that drag and drop fires.
# Effect
example.compat.dragdrop.effect.title = Drag & Drop Effect
example.compat.dragdrop.effect.description = Optional effect when the drag and drop is complete.

### COMPAT - Effect
menu.compat.effect.title = Effect
menu.compat.effect.subMenu.title = Examples
menu.compat.effect.subMenu.main = Overview
# Overview
example.compat.effect.title = Effect Example
example.compat.effect.description = View every available effect.

### COMPAT - Map
menu.compat.map.title = Google Map
menu.compat.map.subMenu.title = Examples
menu.compat.map.subMenu.main = Overview
menu.compat.map.subMenu.address = Address
menu.compat.map.subMenu.controls = Controls
menu.compat.map.subMenu.latlong = Latitude/Longitude
menu.compat.map.subMenu.load = Load XML
menu.compat.map.subMenu.type = Render Type
menu.compat.map.subMenu.zoom = Zoom Level
# Overview
example.compat.map.title = Google Map Example
example.compat.map.description = Basic overview of the Google Map component, with simple address lookup and various available controls.
# Address
example.compat.map.address.title = Google Map Address
example.compat.map.address.description = Lookup a single address or get directions between two locations (including optional text directions).
# Controls
example.compat.map.controls.title = Google Map Controls
example.compat.map.controls.description = Show the different map controls available with the component.
# Latitude/Longitude
example.compat.map.latlong.title = Google Map Latitude/Longitude
example.compat.map.latlong.description = Locate preset locations with latitude and longitude coordinates.
# Load XML
example.compat.map.load.title = Google Map Load KML
example.compat.map.load.description = Load a series of map locations from KML, such as a community provided list of restaurants.
# Type
example.compat.map.type.title = Google Map Type
example.compat.map.type.description = Set the rendering type the map will use, such as Satellite.
# Zoom
example.compat.map.zoom.title = Google Map Zoom Level
example.compat.map.zoom.description = Dynamically set the zoom level from the bean level.

### COMPAT - Media
menu.compat.media.title = Media
menu.compat.media.subMenu.title = Examples
menu.compat.media.subMenu.main = Overview
menu.compat.media.subMenu.flash = Flash
menu.compat.media.subMenu.quicktime = Quicktime
menu.compat.media.subMenu.windows = Windows WMV
menu.compat.media.subMenu.real = Real Player
# Overview
example.compat.media.title = Media Example
example.compat.media.description = Basic overview of the media component
# Flash
example.compat.media.flash.title = Media Flash Example
example.compat.media.flash.description = Render media in the Flash format.
# Quicktime
example.compat.media.quicktime.title = Media Quicktime Example
example.compat.media.quicktime.description = Render media in the Quicktime format.
# Windows WMV
example.compat.media.windows.title = Media Windows WMV Example
example.compat.media.windows.description = Render media in the Windows WMV format.
# Real Player
example.compat.media.real.title = Media Real Player Example
example.compat.media.real.description = Render media in the Real Player format.

### COMPAT - Menu Bar
menu.compat.menuBar.title = Menu Bar
menu.compat.menuBar.subMenu.title = Examples
menu.compat.menuBar.subMenu.main = Overview
menu.compat.menuBar.subMenu.events = Events
menu.compat.menuBar.subMenu.orientation = Orientation
menu.compat.menuBar.subMenu.click = Display on Click
menu.compat.menuBar.subMenu.keyboard = Keyboard Navigation
menu.compat.menuBar.subMenu.icons = Icons
menu.compat.menuBar.subMenu.separator = Separator
menu.compat.menuBar.subMenu.dynamic = Dynamic
# Overview
example.compat.menuBar.title = Menu Bar Example
example.compat.menuBar.description = Basic example of the menu bar component which is used to easily display and customize Javascript menus.
# Events
example.compat.menuBar.events.title = Menu Bar Events
example.compat.menuBar.events.description = Fire events when different menu items are clicked on.
# Orientation
example.compat.menuBar.orientation.title = Menu Bar Orientation
example.compat.menuBar.orientation.description = View the different orientations available with the menu bar component.
# Display on Click
example.compat.menuBar.click.title = Menu Bar Display on Click
example.compat.menuBar.click.description = Determine whether hovering will open the menu or if clicking is necessary.
# Keyboard Navigation
example.compat.menuBar.keyboard.title = Menu Bar Keyboard Navigation
example.compat.menuBar.keyboard.description = Enable or disable keyboard navigation for the menu bar.
# Icons
example.compat.menuBar.icons.title = Menu Bar Icons
example.compat.menuBar.icons.description = Display or hide the image icons associated with some menu items.
# Separator
example.compat.menuBar.separator.title = Menu Bar Separator
example.compat.menuBar.separator.description = View the menu item separator component in the context of a menu bar.
# Dynamic
example.compat.menuBar.dynamic.title = Menu Bar Dynamic
example.compat.menuBar.dynamic.description = Dynamically generate a list of menu items.

### COMPAT - Menu Popup
menu.compat.menuPopup.title = Menu Popup
menu.compat.menuPopup.subMenu.title = Examples
menu.compat.menuPopup.subMenu.main = Overview
menu.compat.menuPopup.subMenu.events = Events
menu.compat.menuPopup.subMenu.orientation = Orientation
menu.compat.menuPopup.subMenu.hide = Hide On
menu.compat.menuPopup.subMenu.keyboard = Keyboard Navigation
menu.compat.menuPopup.subMenu.icons = Icons
menu.compat.menuPopup.subMenu.separator = Separator
menu.compat.menuPopup.subMenu.dynamic = Dynamic
# Overview
example.compat.menuPopup.title = Menu Popup Example
example.compat.menuPopup.description = Basic example of the menu popup which can be displayed on right-click of an element.
# Events
example.compat.menuPopup.events.title = Menu Popup Events
example.compat.menuPopup.events.description = Fire events when different menu items are clicked on.
# Hide On
example.compat.menuPopup.hide.title = Menu Popup Hide On
example.compat.menuPopup.hide.description = Determine how to close the menu popup.
# Keyboard Navigation
example.compat.menuPopup.keyboard.title = Menu Popup Keyboard Navigation
example.compat.menuPopup.keyboard.description = Enable or disable keyboard navigation for the menu popup.
# Icons
example.compat.menuPopup.icons.title = Menu Popup Icons
example.compat.menuPopup.icons.description = Display or hide the image icons associated with some menu items.
# Separator
example.compat.menuPopup.separator.title = Menu Popup Separator
example.compat.menuPopup.separator.description = View the menu item separator component in the context of a menu popup.
# Dynamic
example.compat.menuPopup.dynamic.title = Menu Popup Dynamic
example.compat.menuPopup.dynamic.description = Dynamically generate a list of menu items.

### COMPAT - Output Resource
menu.compat.outputResource.title = Output Resource
menu.compat.outputResource.subMenu.title = Examples
menu.compat.outputResource.subMenu.main = Overview
menu.compat.outputResource.subMenu.type = Type
menu.compat.outputResource.subMenu.attachment = Attachment
menu.compat.outputResource.subMenu.filename = Filename
menu.compat.outputResource.subMenu.label = Label
# Overview
example.compat.outputResource.title = Output Resource Example
example.compat.outputResource.description = Basic overview of the output resource component which is used to easily stream downloadable content to users.
# Type
example.compat.outputResource.type.title = Type Example
example.compat.outputResource.type.description = View the different types of rendering available with the output resource component. 
# Attachment
example.compat.outputResource.attachment.title = Attachment Example
example.compat.outputResource.attachment.description = Choose whether the resource should download as an attachment or attempt to display in the browser.
# Filename
example.compat.outputResource.filename.title = Filename Example
example.compat.outputResource.filename.description = Customize the filename of the resource that is to be downloaded.
# Label
example.compat.outputResource.label.title = Label Example
example.compat.outputResource.label.description = Modify the labels of the button or link that allows the resource to be downloaded.

### COMPAT - Popup
menu.compat.popup.title = Popup
menu.compat.popup.subMenu.title = Examples
menu.compat.popup.subMenu.main = Overview
menu.compat.popup.subMenu.modal = Modal
menu.compat.popup.subMenu.draggable = Draggable
menu.compat.popup.subMenu.center = Auto Center
menu.compat.popup.subMenu.position = Auto Position
menu.compat.popup.subMenu.client = Client Only
# Overview
example.compat.popup.title = Popup Example
example.compat.popup.description = Basic example demonstrating a modal, auto centered popup.
# Modal
example.compat.popup.modal.title = Modal Popup
example.compat.popup.modal.description = Display a modal popup which prevents interacting with the page until the popup is dismissed.
# Draggable
example.compat.popup.draggable.title = Draggable Popup
example.compat.popup.draggable.description = Display a draggable popup that can be moved around the page.
# Auto Center
example.compat.popup.center.title = Auto Center Popup
example.compat.popup.center.description = Automatically center the popup when it is displayed and also when the browser is scrolled.
# Auto Position
example.compat.popup.position.title = Auto Position Popup
example.compat.popup.position.description = Automatically position the popup at a set X,Y coordinate and maintain that position through browser scrolling.
# Client Only
example.compat.popup.client.title = Client Only Popup
example.compat.popup.client.description = Prevent the draggable popup from sending an event to the server when it is dropped.

### COMPAT - Positioned Panel
menu.compat.positioned.title = Positioned Panel
menu.compat.positioned.subMenu.title = Examples
menu.compat.positioned.subMenu.main = Overview
menu.compat.positioned.subMenu.constraint = Constraint
menu.compat.positioned.subMenu.listener = Listener
menu.compat.positioned.subMenu.dynamic = Dynamic
menu.compat.positioned.subMenu.sort = Sorting
menu.compat.positioned.subMenu.style = Style
# Overview
example.compat.positioned.title = Positioned Panel Example
example.compat.positioned.description = An iterator component that allows re-ordering of the list.
# Constraint
example.compat.positioned.constraint.title = Positioned Panel Constraint
example.compat.positioned.constraint.description = Constrain how the re-ordering is displayed and handled.
# Listener
example.compat.positioned.listener.title = Positioned Panel Listener
example.compat.positioned.listener.description = Listen to an event that fires when an item is re-ordered.
# Dynamic
example.compat.positioned.dynamic.title = Positioned Panel Dynamic
example.compat.positioned.dynamic.description = Dynamically add or remove items from the positioned list.
# Sort
example.compat.positioned.sort.title = Positioned Panel Sorting
example.compat.positioned.sort.description = Automatically sort the positioned list items.
# Style
example.compat.positioned.style.title = Positioned Panel Style
example.compat.positioned.style.description = Customize the style of each panel element using varStatus.

### COMPAT - Progress Bar
menu.compat.progress.title = Progress Bar
menu.compat.progress.subMenu.title = Examples
menu.compat.progress.subMenu.main = Overview
menu.compat.progress.subMenu.indeterminate = Indeterminate
menu.compat.progress.subMenu.label = Custom Label
menu.compat.progress.subMenu.multiple = Multiple Instances
menu.compat.progress.subMenu.style = Style
# Overview
example.compat.progress.title = Progress Bar Example
example.compat.progress.description = Basic example demonstrating the progress bar component.
# Indeterminate
example.compat.progress.indeterminate.title = Indeterminate Progress Bar
example.compat.progress.indeterminate.description = Display a progress bar without a specified percent, which is ideal for an unknown long runnning task.
# Custom Label
example.compat.progress.label.title = Custom Progress Bar Label
example.compat.progress.label.description = Customize the position and text of the progress bar label.
# Multiple Instances
example.compat.progress.multiple.title = Multiple Progress Bar Instances
example.compat.progress.multiple.description = Multiple progress bars all running at once. 
# Style
example.compat.progress.style.title = Progress Bar Style
example.compat.progress.style.description = Customize the progress bar style.

### COMPAT - Rich Text
menu.compat.richtext.title = Rich Text
menu.compat.richtext.subMenu.title = Examples
menu.compat.richtext.subMenu.main = Overview
menu.compat.richtext.subMenu.save = Save on Submit
menu.compat.richtext.subMenu.language = Language
menu.compat.richtext.subMenu.skin = Skins
menu.compat.richtext.subMenu.toolbar = Toolbar
menu.compat.richtext.subMenu.disable = Disable
# Overview
example.compat.richtext.title = Rich Text Example
example.compat.richtext.description = Basic example demonstrating the Rich Text component with default values.
# Save on Submit
example.compat.richtext.save.title = Rich Text Save on Submit
example.compat.richtext.save.description = Choose whether the Rich Text component should save anytime a submit is done, or only when the Save button is explicilty clicked by the user.
# Language
example.compat.richtext.language.title = Rich Text Language
example.compat.richtext.language.description = Choose from 54 available languages for the Rich Text component.
# Skin
example.compat.richtext.skin.title = Rich Text Skins
example.compat.richtext.skin.description = Choose from 3 different skin themes for the Rich Text component.
# Toolbar
example.compat.richtext.toolbar.title = Rich Text Toolbar
example.compat.richtext.toolbar.description = View the basic or feature rich toolbars for the Rich Text component.
# Disable
example.compat.richtext.disable.title = Rich Text Disabled State
example.compat.richtext.disable.description = View how the disabled state of the Rich Text component appears and functions.

### COMPAT - Tab Pane
menu.compat.tab.title = Tabs
menu.compat.tab.subMenu.title = Examples
menu.compat.tab.subMenu.main = Overview
menu.compat.tab.subMenu.placement = Placement
menu.compat.tab.subMenu.icon = Icons
menu.compat.tab.subMenu.label = Labels
menu.compat.tab.subMenu.wrapping = Text Wrapping
menu.compat.tab.subMenu.visibility = Visibility
menu.compat.tab.subMenu.control = Backend Control
menu.compat.tab.subMenu.events = Events
menu.compat.tab.subMenu.dynamic = Dynamic
# Overview
example.compat.tab.title = Tab Example
example.compat.tab.description = Overview of the tab set component.
# Position
example.compat.tab.placement.title = Tab Placement
example.compat.tab.placement.description = Customize where the tabs will display on the container.
# Icons
example.compat.tab.icon.title = Tab Icons
example.compat.tab.icon.description = Add icons to the tab component.
# Labels
example.compat.tab.label.title = Tab Labels
example.compat.tab.label.description = Customize the tab labels and method of rendering.
# Text Wrapping
example.compat.tab.wrapping.title = Tab Text Wrapping
example.compat.tab.wrapping.description = View the effect of label text wrapping.
# Visibility
example.compat.tab.visibility.title = Tab Visibility
example.compat.tab.visibility.description = Hide or display each individual tab.
# Backend Control
example.compat.tab.control.title = Tab Backend Control
example.compat.tab.control.description = Control the selected tab from the backing bean.
# Events
example.compat.tab.events.title = Tab Events
example.compat.tab.events.description = Listener that fires when the tab is changed.
# Dynamic
example.compat.tab.dynamic.title = Dynamic Tabs
example.compat.tab.dynamic.description = Dynamically add and remove tabs.

### COMPAT - Tree
menu.compat.tree.title = Tree
menu.compat.tree.subMenu.title = Examples
menu.compat.tree.subMenu.main = Overview
menu.compat.tree.subMenu.events = Events
menu.compat.tree.subMenu.icons = Custom Icons
menu.compat.tree.subMenu.navigation = Hide Navigation
menu.compat.tree.subMenu.root = Hide Root Node
menu.compat.tree.subMenu.dynamic = Dynamic
# Overview
example.compat.tree.title = Tree Example
example.compat.tree.description = Overview of the tree component.
# Events
example.compat.tree.events.title = Tree Events
example.compat.tree.events.description = Demonstration of the different events the tree can fire.
# Custom Icons
example.compat.tree.icons.title = Tree Custom Icons
example.compat.tree.icons.description = Custom image icons for the tree nodes and leafs.
# Hide Navigation
example.compat.tree.navigation.title = Tree Hide Navigation
example.compat.tree.navigation.description = Allow the navigation links to be hidden.
# Hide Root Node
example.compat.tree.root.title = Tree Hide Root Note
example.compat.tree.root.description = Toggle the visibility of the root node.
# Dynamic
example.compat.tree.dynamic.title = Dynamic Tree
example.compat.tree.dynamic.description = Add and remove nodes from the tree component.

### COMPAT - Tooltip
menu.compat.tooltip.title = Tooltip
menu.compat.tooltip.subMenu.title = Examples
menu.compat.tooltip.subMenu.main = Overview
menu.compat.tooltip.subMenu.display = Display Type
menu.compat.tooltip.subMenu.hide = Hide Type
menu.compat.tooltip.subMenu.draggable = Draggable
menu.compat.tooltip.subMenu.delay = Hover Delay
menu.compat.tooltip.subMenu.move = Move with Mouse
menu.compat.tooltip.subMenu.preview = Website Previews
# Overview
example.compat.tooltip.title = Tooltip Example
example.compat.tooltip.description = Overview of the rich tooltip component.
# Display On
example.compat.tooltip.display.title = Tooltip Display On
example.compat.tooltip.display.description = Simple example demonstrating the different ways the tooltip can be displayed.
# Hide On
example.compat.tooltip.hide.title = Tooltip Hide On
example.compat.tooltip.hide.description = Simple example demonstrating the different ways the tooltip can be hidden.
# Draggable
example.compat.tooltip.draggable.title = Tooltip Draggable
example.compat.tooltip.draggable.description = Allow the tooltip to be dragged or not.
# Hover Delay
example.compat.tooltip.delay.title = Tooltip Hover Delay
example.compat.tooltip.delay.description = Customize the delay before displaying the tooltip on hover.
# Move with Mouse
example.compat.tooltip.move.title = Tooltip Move with Mouse
example.compat.tooltip.move.description = Toggle the tooltip moving with the mouse or not.
# Website Previews
example.compat.tooltip.preview.title = Tooltip Website Previews
example.compat.tooltip.preview.description = Example of hover previews on links.

### COMPAT - Series Panel
menu.compat.series.title = Series Panel
menu.compat.series.subMenu.title = Examples
menu.compat.series.subMenu.main = Overview
menu.compat.series.subMenu.dynamic = Dynamic
menu.compat.series.subMenu.rows = Rows
menu.compat.series.subMenu.first = Start From
menu.compat.series.subMenu.content = Custom Content
menu.compat.series.subMenu.style = Style
# Overview
example.compat.series.title = Series Panel Example
example.compat.series.description = Overview of the panel series iterator component.
# Dynamic
example.compat.series.dynamic.title = Series Panel Dynamic
example.compat.series.dynamic.description = Add or remove items from the panel series component.
# Rows
example.compat.series.rows.title = Series Panel Rows
example.compat.series.rows.description = Set the number of rows to display at once with the panel series component.
# Start From
example.compat.series.first.title = Series Panel Start From
example.compat.series.first.description = Set what index to start the panel series rendering from with the first attribute.
# Custom Content
example.compat.series.content.title = Series Panel Custom Conent
example.compat.series.content.description = Customize the content to be used in the panel series component.
# Style
example.compat.series.style.title = Series Panel Style
example.compat.series.style.description = Style the panel series children via the varStatus attribute.

### COMPAT - Set Event Phase
menu.compat.eventphase.title = Set Event Phase
menu.compat.eventphase.subMenu.title = Examples
menu.compat.eventphase.subMenu.main = Overview
menu.compat.eventphase.subMenu.change = Value Change Event
menu.compat.eventphase.subMenu.action = Action Event
# Overview
example.compat.eventphase.title = Set Event Phase Example
example.compat.eventphase.description = Basic example demonstrating the functionality of the setEventPhase.
# Value Change Event
example.compat.eventphase.change.title = Value Change Event Phase Example
example.compat.eventphase.change.description = This example demonstrates firing a valueChangeListener in a later phase through the setEventPhase. This allows us to modify a bean value without the value being overwritten in a later phase, as normally happens in the early firing valueChangeListeners.
# Action Event
example.compat.eventphase.action.title = Action Event Phase Example
example.compat.eventphase.action.description = This example demonstrates using setEventPhase to force an actionListener to fire earlier in the lifecycle, before validation occurs. This creates an effect similar to the immediate="true" attribute.

### COMPAT - Stacking Panel
menu.compat.stacking.title = Stacking Panel
menu.compat.stacking.subMenu.title = Examples
menu.compat.stacking.subMenu.main = Overview
# Overview
example.compat.stacking.title = Stacking Panel Example
example.compat.stacking.description = Basic example demonstrating the functionality of the panelStack.


### EE - Filler Properties
### EE - Table
menu.ee.table.title = Table Components
### EE - Layout
menu.ee.layout.title = Layout Components
### EE - Selection
menu.ee.selection.title = Selection Components
### EE - Tree
menu.ee.tree.title = Tree Components
### EE - Process
menu.ee.process.title = Process Components
### EE - Status Bar
menu.ee.statusbar.title = Status Bar
### EE - Slideshow
menu.ee.slideshow.title = Slide Show
### EE - Schedule
menu.ee.schedule.title = Schedule
