<?xml version="1.0"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml" 
    xmlns:h="http://java.sun.com/jsf/html" 
    xmlns:f="http://java.sun.com/jsf/core" 
    xmlns:c="http://java.sun.com/jsp/jstl/core" 
    xmlns:ace="http://www.icefaces.org/icefaces/components" 
    xmlns:ice="http://www.icesoft.com/icefaces/component" 
    xmlns:ui="http://java.sun.com/jsf/facelets" 
    template="/resources/templates/content-template.xhtml">
    
    <ui:param name="title" value="#{msgs[progress.title]}"/>
    <ui:param name="description" value="#{msgs[progress.description]}"/>
    <ui:param name="resourceValue" value="#{progress.exampleResource}"/>
    
    <ui:define name="example">
        <p><b>Demo Use Cases:</b></p>
        <p><b>1.</b> Click the "Start" button to simulate a long running task on the server that updates the completed status on the page.</p>
        <p><b>2.</b> At any point click the "Stop" button to stop the long running task, or click "Reset" to put the progress back to 0%.</p>
        <p>The progress bar component is very useful for notifying users of the status of long running tasks on the server. For example filtering search results, saving or uploading a large file, processing a complex algorithm, etc. can all be displayed with the progress bar.</p>
        <p>From a developer perspective they can update the progress bar percentage at any point during their long running task, and use Ajax Push to display the update to the user's browser.</p>
        <p>The size, labels, coloring, etc. of the progress bar can be customized.</p> 
        <br/>
    
        <h:form>
            <h:panelGrid columns="3">
                <h:outputLabel for="progressOut" value="Progress Bar:"/>
                <ice:outputProgress id="progressOut"
                                    value="#{task.progress}"/>
                
                <h:panelGrid columns="3">
                    <h:commandButton value="Start"
                                     actionListener="#{progress.startTask}"
                                     rendered="#{!task.taskRunning}"
                                     disabled="#{task.taskRunning}"/>
                    <h:commandButton value="Stop"
                                     actionListener="#{task.stopTask}"
                                     rendered="#{task.taskRunning}"
                                     disabled="#{!task.taskRunning}"/>
                    <h:commandButton value="Reset"
                                     actionListener="#{task.resetTask}"
                                     rendered="#{!task.taskRunning}"
                                     disabled="#{task.taskRunning}"/>
                </h:panelGrid>
            </h:panelGrid>
        </h:form>
    </ui:define>
</ui:composition>
