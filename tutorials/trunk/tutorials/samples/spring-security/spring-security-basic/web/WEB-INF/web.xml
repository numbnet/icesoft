<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">

	<display-name>ICEfaces Tutorial: Timezone Part 2</display-name>

	<description>
		ICEfaces Tutorial: Timezone Part 2 Show how simple it is to
		integrate ICEfaces technology into an existing JavaServer Faces
		environment.
	</description>

	<context-param>
		<param-name>javax.faces.STATE_SAVING_METHOD</param-name>
		<param-value>server</param-value>
	</context-param>

	<context-param>
		<param-name>javax.faces.DEFAULT_SUFFIX</param-name>
		<param-value>.jspx</param-value>
	</context-param>

	<context-param>
  		<param-name>facelets.VIEW_MAPPINGS</param-name>
  		<param-value>*.jspx</param-value>
	</context-param>
	
	<!-- Specifies to the ICEfaces framework that synchronous update mode is to be 
		used.  By default, ICEfaces uses asynchronous update mode to support 
		server-initiated updates (AJAX push).  Setting to true will enable 
		synchronous update mode and disable AJAX push features. -->
	<context-param>
		<param-name>com.icesoft.faces.synchronousUpdate</param-name>
		<param-value>false</param-value>
	</context-param>

	<context-param>
		<param-name>com.icesoft.faces.concurrentDOMViews</param-name>
		<param-value>true</param-value>
	</context-param>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml</param-value>
	</context-param>
	<!-- ConfigureListener is not generally required. Due to an apparent bug in 
		Tomcat users have reported seeing the following error "SEVERE: ICEfaces 
		could not initialize JavaServer Faces. Please check that the JSF .jar files 
		are installed correctly.". Specifying the ConfigureListener resolves the 
		issue. 
		<listener> 
		<listener-class>com.sun.faces.config.ConfigureListener</listener-class> 
		</listener>
	-->

	<!-- Faces Servlet -->
	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- Persistent Faces Servlet -->
	<servlet>
		<servlet-name>Persistent Faces Servlet</servlet-name>
		<servlet-class>
			com.icesoft.faces.webapp.xmlhttp.PersistentFacesServlet
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- Blocking Servlet -->
	<servlet>
		<servlet-name>Blocking Servlet</servlet-name>
		<servlet-class>
			com.icesoft.faces.webapp.xmlhttp.BlockingServlet
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- Persistent Faces Servlet Mappings -->
	<servlet-mapping>
		<servlet-name>Persistent Faces Servlet</servlet-name>
		<url-pattern>/xmlhttp/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>Persistent Faces Servlet</servlet-name>
		<url-pattern>*.iface</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>Persistent Faces Servlet</servlet-name>
		<url-pattern>*.jspx</url-pattern>
	</servlet-mapping>

	<!-- Blocking Servlet Mapping -->
	<servlet-mapping>
		<servlet-name>Blocking Servlet</servlet-name>
		<url-pattern>/block/*</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<!-- Welcome File List -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<listener>
		<listener-class>
			com.sun.faces.config.ConfigureListener
		</listener-class>
	</listener>

	<!-- Listener implementation to handle web application lifecycle
		events -->
	<listener>
		<listener-class>
			com.sun.faces.application.WebappLifecycleListener
		</listener-class>
	</listener>
	<listener>
		<listener-class>
			com.icesoft.faces.util.event.servlet.ContextEventRepeater
		</listener-class>
	</listener>
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<!-- Spring Security -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>
			org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>