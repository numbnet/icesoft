<?xml version="1.0"?>
<!--
  ~ Version: MPL 1.1/GPL 2.0/LGPL 2.1
  ~
  ~ "The contents of this file are subject to the Mozilla Public License
  ~ Version 1.1 (the "License"); you may not use this file except in
  ~ compliance with the License. You may obtain a copy of the License at
  ~ http://www.mozilla.org/MPL/
  ~
  ~ Software distributed under the License is distributed on an "AS IS"
  ~ basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing rights and limitations under
  ~ the License.
  ~
  ~ The Original Code is ICEfaces 1.5 open source software code, released
  ~ November 5, 2006. The Initial Developer of the Original Code is ICEsoft
  ~ Technologies Canada, Corp. Portions created by ICEsoft are Copyright (C)
  ~ 2004-2006 ICEsoft Technologies Canada, Corp. All Rights Reserved.
  ~
  ~ Contributor(s): _____________________.
  ~
  ~ Alternatively, the contents of this file may be used under the terms of
  ~ the GNU Lesser General Public License Version 2.1 or later (the "LGPL"
  ~ License), in which case the provisions of the LGPL License are
  ~ applicable instead of those above. If you wish to allow use of your
  ~ version of this file only under the terms of the LGPL License and not to
  ~ allow others to use your version of this file under the MPL, indicate
  ~ your decision by deleting the provisions above and replace them with
  ~ the notice and other provisions required by the LGPL License. If you do
  ~ not delete the provisions above, a recipient may use your version of
  ~ this file under either the MPL or the LGPL License."
  ~
  -->
<project name="dataTable" default="tomcat6.0">

    <!-- location of common build file -->
    <property name="build-common.xml"
              value="../../../../../../icefaces/trunk/icefaces/samples/etc/build-common.xml"/>

    <property name="compile.source" value="1.5"/>
    <property name="compile.target" value="1.5"/>

    <!-- path to applicaiton libraries -->
    <property name="proj.lib.dir" location="./lib/"/>

    <import file="${build-common.xml}"/>

    <patternset id="common.icefaces.lib.jars.to.include"
                includes="icefaces.jar
                                icefaces-comps.jar "/>

    <patternset id="deployment.icefaces.lib.jars.to.include"
                includes="backport-util-concurrent.jar
                                commons-beanutils.jar                                
                                commons-digester.jar
                                commons-discovery.jar
                                commons-el.jar
                                commons-fileupload.jar
                                jsf-api-1.2.jar 
                                jsf-impl-1.2.jar                        
                                jstl.jar"/>

    <target name="clean" depends="common.clean">
        <delete quiet="true">
            <fileset dir="${app.lib.dir}">
                <patternset refid="deployment.icefaces.lib.jars.to.include"/>
            </fileset>
        </delete>
    </target>

    <target name="compile">
        <compile>
            <add.javac.elements>
                <classpath>
                    <fileset dir="${proj.lib.dir}" includes="*.jar"/>
                </classpath>
            </add.javac.elements>
        </compile>
    </target>

    <target name="build.war" depends="compile">

        <copy todir="${app.lib.dir}" preservelastmodified="true">
            <fileset dir="${icefaces.lib.dir}">
                <patternset refid="common.icefaces.lib.jars.to.include"/>
                <patternset refid="deployment.icefaces.lib.jars.to.include"/>
            </fileset>
            <fileset dir="${proj.lib.dir}" includes="*.jar"/>
        </copy>

        <build.war/>
    </target>

    <target name="build.minimal.war" depends="compile">

        <fileset dir="${icefaces.lib.dir}">
            <patternset refid="common.icefaces.lib.jars.to.include"/>
        </fileset>

        <build.war war.file.name="${ant.project.name}.war"/>
    </target>

    <!--
        Zip of source code and save in documents folder
    -->
    <target name="copy.zip.src">
        <mkdir dir="${dist.dir}"/>
        <zip basedir="." destfile="${dist.dir}/${ant.project.name}.zip"/>
    </target>

    <target name="build.deployable"
            depends="clean, copy.zip.src, build.minimal.war"/>

</project>