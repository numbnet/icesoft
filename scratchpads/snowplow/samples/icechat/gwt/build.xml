<?xml version="1.0" encoding="utf-8" ?>
<project name="icechat-gwt" default="war" basedir=".">

	<property file="../build-common.properties" />

	<import file="../common/build-common.xml" />

	<fileset id="gwt-integration" file="../../../integration/gwt/core/dist/icepush-gwt.jar" />

	<!-- Configure path to GWT SDK -->
	<property name="gwt.sdk" location="lib/gwtSDK" />
	<property name="tests.lib.dir" location="lib/tests" />
	<property name="build.tests" location="build-test" />
	<property name="reports.tests" value="reports/junit" />

	<path id="project.class.path">
		<pathelement location="${build.dir}/webapp/WEB-INF/classes" />
		<pathelement location="${build.dir}/classes" />
		<pathelement location="${gwt.sdk}/gwt-user.jar" />
		<fileset dir="${gwt.sdk}" includes="gwt-dev*.jar" />
		<fileset refid="icepush" />
		<fileset refid="api" />
		<fileset refid="beans" />
		<fileset refid="gwt-integration" />
	</path>

	<path id="project.test.class.path">
		<fileset dir="${tests.lib.dir}" includes="**/*.jar" />
	</path>

	<target name="libs" description="Copy libs to WEB-INF/lib">
		<mkdir dir="${build.dir}/webapp/WEB-INF/lib" />
		<copy todir="${build.dir}/webapp/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
	</target>

	<target name="javac" depends="libs" description="Compile java source">
		<compile>
			<add.classpath.elements>
				<path refid="project.class.path" />
			</add.classpath.elements>
		</compile>
	</target>

	<target name="gwtc" depends="javac" description="GWT compile to JavaScript">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<pathelement location="${java.dir}" />
				<path refid="project.class.path" />
			</classpath>
			<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
			<jvmarg value="-Xmx256M" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg value="org.icepush.samples.icechat.gwt.IceChatModule" />
			<arg line="-war ${build.dir}/webapp" />
		</java>
	</target>

	<target name="devmode" depends="javac" description="Run development mode">
		<copy todir="${build.dir}/webapp/WEB-INF/lib" preservelastmodified="true" verbose="true">
			<fileset refid="icepush"/>
			<fileset refid="beans"/>
			<fileset refid="api"/>
		</copy>
		<copy todir="${build.dir}/webapp/common" preservelastmodified="false" verbose="true">
			<fileset dir="../../common">
				<include name="**/*" />
			</fileset>
		</copy>
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
			<classpath>
				<pathelement location="${java.dir}" />
				<path refid="project.class.path" />
			</classpath>
			<jvmarg value="-Xmx256M" />
			<jvmarg value="-ea" />
			<arg value="-startupUrl" />
			<arg value="IceChatModule.html" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg value="org.icepush.samples.icechat.gwt.IceChatModule" />
		</java>
	</target>



	<target name="javac.tests" depends="javac" description="Compiles test code">
		<mkdir dir="${build.tests}" />
		<javac srcdir="test" destdir="${build.tests}" includes="**" encoding="utf-8" source="1.5" target="1.5" nowarn="true" debug="true" debuglevel="lines,vars,source">
			<classpath refid="project.test.class.path" />
			<classpath refid="project.class.path" />
		</javac>

	</target>

	<target name="test" description="Run development and production mode tests">

	</target>


	<target name="hosted" depends="devmode" description="Run development mode (NOTE: the 'hosted' target is deprecated)" />

	<target name="build-server" depends="javac" description="Build this project">
		<build.war>
			<add.libs>
				<fileset refid="beans" />
				<fileset refid="gwt-integration" />
			</add.libs>
		</build.war>
	</target>


	<target name="war" depends="clean,gwtc" description="Create a war file">
		<antcall target="test" />
		<build.war>
			<add.libs>
				<fileset refid="beans" />
				<fileset refid="gwt-integration" />
			</add.libs>
		</build.war>
		<copy file="${dist.dir}/${ant.project.name}.war" todir="/home/philip/glassfish-v2.1/domains/domain1/autodeploy" preservelastmodified="true" verbose="true"/>
	</target>

	<target name="clean" description="clean's this project">
		<clean>
			<add.build.elements>
				<fileset dir="${web.dir}/WEB-INF/classes" />
				<fileset dir="${web.dir}/icechatmodule" />
				<fileset dir="${web.dir}/WEB-INF/lib" />
			</add.build.elements>
		</clean>
	</target>

	<target name="server" depends="build-server" description="rebuild server component.">
		<mkdir dir="${dist.dir}" />
		<zip destfile="${dist.dir}/${ant.project.name}.war" basedir="${build.dir}/webapp" />
	</target>

</project>
